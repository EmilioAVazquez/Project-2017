(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    421726,       8132]
NotebookOptionsPosition[    402876,       7694]
NotebookOutlinePosition[    409191,       7835]
CellTagsIndexPosition[    409148,       7832]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Coupled Pendulum System ", "Title",
 CellChangeTimes->{{3.700774153171832*^9, 3.700774159196458*^9}, {
  3.705104157104324*^9, 3.7051041574063416`*^9}, {3.70568519155404*^9, 
  3.705685209964157*^9}, {3.7071655535832157`*^9, 
  3.7071655631391497`*^9}},ExpressionUUID->"86c51ef5-ceca-424f-9d3c-\
79e056bbec5e"],

Cell["\<\
Modeling the motion of a system of multiple pendulums connected by springs \
\>", "Abstract",
 CellChangeTimes->{{3.700774172671139*^9, 3.700774220850109*^9}, {
  3.700778895632181*^9, 3.700778896308676*^9}, {3.7051041615775795`*^9, 
  3.705104170817108*^9}, {3.7071655663075438`*^9, 
  3.707165595282072*^9}},ExpressionUUID->"97fb1062-c0f9-4bb8-9a27-\
b8b02c847e9f"],

Cell[CellGroupData[{

Cell["Introduction ", "Subsubsection",
 CellChangeTimes->{{3.707229921007465*^9, 
  3.707229938041505*^9}},ExpressionUUID->"28e620eb-9331-4161-857f-\
7f8c6387bb63"],

Cell["\<\
The purpose of the following text is to understand the process of modeling \
physical systems. More precisely the purpose is to model a system of coupled \
pendulums. The text is first going to explain the basic physical modeling and \
built on top of calculus and differential equation knowledge to develop a \
more complex system. \
\>", "Text",
 CellChangeTimes->{{3.707229954777369*^9, 3.7072299662010307`*^9}, {
  3.707230012020479*^9, 3.7072300568596153`*^9}, {3.7072300916452217`*^9, 
  3.7072303092172403`*^9}, {3.707231159238441*^9, 3.707231187389392*^9}, {
  3.707239072361936*^9, 3.7072390739297867`*^9}, {3.707240330934309*^9, 
  3.707240331286006*^9}, {3.7072415330006*^9, 
  3.707241534846786*^9}},ExpressionUUID->"8f6b332e-5806-4584-bb7a-\
a3d5a4de7c7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Physical properties of pendulums and springs ", "Section",
 CellChangeTimes->{{3.700774708350976*^9, 3.700774714085747*^9}, {
  3.7051042493566003`*^9, 3.7051042513157125`*^9}, {3.705686166481989*^9, 
  3.7056861672865133`*^9}, {3.7071656279111633`*^9, 
  3.70716567621686*^9}},ExpressionUUID->"ad5ebe71-b89a-4885-96e3-\
0e4ba903090a"],

Cell["\<\
In this section the text is going to explain the concept of linear and \
constant kinematics, dynamics and the physical properties of pendulums and \
springs. \
\>", "Text",
 CellChangeTimes->{{3.7072398524457827`*^9, 3.7072399406573153`*^9}, 
   3.707259375420292*^9},ExpressionUUID->"1ec3561a-67f9-461d-ac03-\
64608ce1d8ec"],

Cell[CellGroupData[{

Cell["Understanding position, velocity and acceleration ", "Subsubsection",
 CellChangeTimes->{{3.7071672233142967`*^9, 3.707167266929179*^9}, {
  3.7071675382715178`*^9, 
  3.7071675409655848`*^9}},ExpressionUUID->"4c782f69-834e-4470-b13f-\
c154086f0a5c"],

Cell[TextData[{
 "The position of an object is described by its location on space. The \
velocity of an object, on the other hand, can be explained by the the change \
of position in space with respect of time while the acceleration can be \
explained as the change of velocity with respect of time. It was Issac \
Newton, who does not need an introduction, that found out that the position, \
velocity and acceleration of an object can be also represented mathematically \
, more exactly as the derivatives and integrals of each other. This means \
that  if one were to derivate the position one would get the velocity, and if \
one derivates the position twice one would get the acceleration. Moreover, by \
integrating the acceleration once, one will compute the velocity, and if one \
integrates acceleration twice, one will get the position of the same object.  \
[x\[CloseCurlyQuote]\[CloseCurlyQuote][ t ] = a[ t ], x\[CloseCurlyQuote][ t \
] = v[ t ], x[ t ] = x[ t ] ]\n\nIn the following diagram the position, \
velocity and acceleration is represented as integral and derivatives of each \
other respectively. \n",
 StyleBox["You can input different acceleration ranging from -3m/s^2 to \
3m/s^2 ! !", "Direction"]
}], "Text",
 CellChangeTimes->{{3.70718572591451*^9, 3.707185839378357*^9}, {
   3.707185897543846*^9, 3.707186240380904*^9}, {3.707186285433404*^9, 
   3.707186478271501*^9}, {3.707186886666312*^9, 3.707186969415901*^9}, {
   3.7071870806996193`*^9, 3.707187097914712*^9}, {3.7071871718606663`*^9, 
   3.707187173311159*^9}, {3.707188234727907*^9, 3.70718824382861*^9}, {
   3.70718827852306*^9, 3.7071883301576347`*^9}, {3.7072126307470407`*^9, 
   3.7072126746704617`*^9}, {3.707231254577237*^9, 3.7072313790795813`*^9}, {
   3.70723910660244*^9, 3.70723912473805*^9}, {3.707240893571987*^9, 
   3.707240911616144*^9}, {3.7072409477811813`*^9, 3.707240956926509*^9}, {
   3.707240999405128*^9, 3.7072410468343763`*^9}, {3.707241540942211*^9, 
   3.707241541213048*^9}, 3.707260032446823*^9, {3.707260134058372*^9, 
   3.70726021238227*^9}},ExpressionUUID->"b6486709-a8d4-4c0e-959e-\
a0a7122dcba3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"a", "*", "x"}], ",", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "/", "a"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", "\n", " ", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", " ", "20"}], "}"}]}], "}"}]}]}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "2", ",", "\"\<Initial Acceleration\>\""}], "}"}], 
     ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.7071864908703012`*^9, 3.707186525918438*^9}, {
  3.707186693366789*^9, 3.7071866944702263`*^9}, {3.707214783398692*^9, 
  3.707214822357093*^9}, {3.707258836887864*^9, 3.7072588573505507`*^9}, {
  3.707259985976824*^9, 3.707260019597479*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"8bc90c84-3e23-4a20-ba5d-d617f2a3c80d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.8799999999999999, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 2, "Initial Acceleration"}, -3, 3}}, 
    Typeset`size$$ = {360., {111., 116.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$73559$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$73559$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`a$$, $CellContext`a$$ $CellContext`x, \
$CellContext`x^2/$CellContext`a$$}, {$CellContext`x, 0, 5}, 
        PlotRange -> {All, {-20, 20}}], 
      "Specifications" :> {{{$CellContext`a$$, 2, "Initial Acceleration"}, -3,
          3}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {156., 162.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.707258859788506*^9, {3.7072600226295967`*^9, 3.7072600251745768`*^9}, 
   3.707261601281645*^9, 3.707265779809865*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"e24c705a-eeb0-4e60-aeb9-984e5144d7c2"]
}, {2}]],

Cell["\<\
 In this plot the horizontal axis is the time in seconds and the vertical \
axis is the distance in meters, velocity in meters per seconds and \
acceleration in meters per second square respectably.  \
\>", "Direction",
 CellChangeTimes->{{3.7072128888780937`*^9, 3.707213031582056*^9}, {
  3.7072313619297028`*^9, 3.707231366990637*^9}, {3.707239178738175*^9, 
  3.707239199887416*^9}, {3.707241058866239*^9, 
  3.7072410837696447`*^9}},ExpressionUUID->"ea2391ae-57ef-4a16-a69e-\
1c9ebb38bf09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Describing springs with Hook\[CloseCurlyQuote]s law to understand \
dynamics", "Subsubsection",
 CellChangeTimes->{{3.700774312865305*^9, 3.700774350341485*^9}, {
  3.7051042689957237`*^9, 3.7051043842073135`*^9}, {3.705105072313671*^9, 
  3.705105092602831*^9}, {3.705683778330366*^9, 3.705683783009487*^9}, {
  3.707166349219429*^9, 3.707166380900342*^9}, {3.707167182019581*^9, 
  3.7071672175702963`*^9}, {3.7071674964930763`*^9, 3.707167513426797*^9}, {
  3.707186608836361*^9, 
  3.707186611828609*^9}},ExpressionUUID->"d890ae57-72b0-4fac-ab73-\
b68c673ad46e"],

Cell["\<\
It is important to remember that the dynamics of a system is the collection \
of forces acting on a system. These approach requires the three laws of \
Newton (inertia, action reaction pair and F=ma).The use of dynamics is \
interesting to scientist and physicist because it allows them to model with \
differential equations the motion of a system. \
\>", "Text",
 CellChangeTimes->{{3.707239039742423*^9, 3.7072390572582417`*^9}, {
   3.707239205279203*^9, 3.707239317085288*^9}, {3.707239431060049*^9, 
   3.707239488130867*^9}, {3.707241090489711*^9, 3.707241117511307*^9}, 
   3.707260036826498*^9},ExpressionUUID->"000ebc11-9b7a-4185-a407-\
1396bad361b4"],

Cell["\<\
The string is a device that has the property of contracting and expanding \
depending on its displacement. The fifteen century physicist and chemist \
Robert Hook was one of the first scientist to formalize the behaviour of a \
spring. He noticed that, for instance, the force of the spring was \
proportional and in the opposite direction to the displacement. This is know \
as the Hook\[CloseCurlyQuote]s law.  [F= k *x]\
\>", "Text",
 CellChangeTimes->{{3.707186565957961*^9, 3.707186579173069*^9}, {
   3.707186650459806*^9, 3.707186674290811*^9}, {3.707186706484996*^9, 
   3.70718680147605*^9}, {3.707186836452355*^9, 3.707186853178236*^9}, 
   3.70718717693372*^9, {3.707212669734432*^9, 3.7072126906817923`*^9}, {
   3.707212782016762*^9, 3.707212800424081*^9}, 3.707213048598349*^9, {
   3.707213123395968*^9, 3.707213133457892*^9}, {3.707230337227281*^9, 
   3.707230422412505*^9}, {3.707260045572565*^9, 3.7072600506258574`*^9}, {
   3.707260112810073*^9, 
   3.707260117921907*^9}},ExpressionUUID->"eec92303-e8e5-4399-8604-\
3050c0efb912"],

Cell["\<\
For purposes of this text the focus is not going to be in deriving the \
differential equation; nevertheless, the knowledge of origin of this \
differential equation is going to be briefly described at the beginning of \
each section.\
\>", "Direction",
 CellChangeTimes->{{3.707241123273429*^9, 3.70724119952809*^9}, {
  3.7072412393054*^9, 3.707241269328017*^9}, {3.707261534395804*^9, 
  3.707261543860422*^9}},ExpressionUUID->"8cbb6830-3ce7-4262-bc08-\
463a1be1ae9c"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "two images of springs", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Image:WordData", "Result", 1, 1, "Input", 
        "Entity[\"Word\", \"springs\"][EntityProperty[\"Word\", \"Image\"]]"},
       "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"springs\"][EntityProperty[\"Word\", \
\"Image\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"springs\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "springs"}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", "\"English word\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                    0], {LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"image\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Global`GraphicsBoxOptionsDefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Global`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Global`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Global`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Image:WordData", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Data", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement[
       "imagesource", {}, {
        "http://www.faqs.org/photo-dict/phrase/2960/spring.html"}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"springs\"][EntityProperty[\"Word\", \
\"Image\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztnQdYG1e2+Pd77/33Jbv7spvEBdv0XgUIIYpAIJDoQoBAFNF778U0m2LA
GIMx7r2XuCSxU5w4cZw4zZvudRIncRwntmMb0zvq78xcaSyqRYmx9//Od6IM
g9DM/HTOueece2esE58TlPwff/rTnwqegZeguBJGfn5cKfcf8ENIdkFaSnZS
ond2YVJKUr59/H/Czq3wXyL8h23LnhKRqiwSJRErRCISS8WScQo7p1KxUIRU
JBCCou2FZqCqLCwrhGuhGagqc2SlDI3gpozlkaxAF5qBqjI7VhNxzZyVmNCF
ZqCqqM5qetNSZjWNG05kJRZKFpqBqjIVk5nimmhX07NS1oVmMDOZtXWJJGKk
kxrVRG5PdbwiZHamNZGVMpl/M1aqWNH0xMa54SNdT3nPvxmr6TGqiAvDgss4
VgjXQjOYscwLq6lwKbNCuJ7e2I5k1qweiUukJE/7OIhEFTizM62JrJRloa97
NqKKFaloXWMcEJdxuJ52VrJpcanCalJchPwfq6lMS45r7B7RZLLQFz0zGXft
E/cQTFS3KzmuCTvlpqX040Jf/VxlvlhNlKfdrmSqmdb/sZJNhmWq96g+FKqO
6/Ff79xFFVZTyYxYjcP1+K90jjJrH5ye1VQm9/Symt5m5oXVv5kPThTpWGec
npKKrJ722D6VTHTJcaZFoFD+cSKriUalDG2hr3J+5JGspGPzeVVYPe3xaipR
hZXyzonOOM3g+P8nq0lj11SsJoavhb7K+REClPKPqoCaihXx239XHxz3oyqg
pvI7gti/mQ8qO+C4Paqwmh6XsizgNc6XzIjVVNymQTQXu0KnBSqWyCRSGdqW
SsWKXTJM8f1i+Q/wn1SCEkZshxQU/sP2wE8SOAeRTCqSiIX4h4uxj8Lfh+/B
/nySqk81eqqDmghtIsOZkxKASmVCqfyaxVIJ2iMT4bSEUokYvzqhSIIzFcEb
xGIhvA+IwJ+NiiWjAFEglKL3KRQ/PxnaJ5I8PDHpZAXy3FlJx9Y7k1rXHFmh
a8FZyO0H/xnMaRDHKEIz4NguqUAiHcUsV6r0NqkIV6EMI4fZFlABGGimUoLD
hD+DPxLgH4POcBpck/5qHlkp758pKzkf7CqFIkzFuHlh5OAChwSjcN2Y1YG9
4ZaGu55YIh4ZGXhw77fvvv3i4qfvvfLRWyd+uPqlSDgEDqj4a1xx2vB3mA3K
ZLihYVc003N8QljBNYATCfFwhKcfAvjygY9MLJLJY5dkdKT//s3vf7j8zqVT
e4+1Vm0oSswP80zwsuXRTD0ttF2N1d3MdRJTYqU4S7FUJBQMjfR393Xe77x3
e+D3nx/c+PbejW877vwMnwQHwXj9Mayk0xbU8xCvJMMyiVCGojSKwWKBcLir
9+bX/7pw6rPTu040FDZnhkczbVi2hjRrA0eSJo2k4WqtybTR8aQaelBN3Chm
rjZmTiSdw5sbLr16+Pzhba/tWHd269ozWxrO7Wk9vbPpxLa1hzfVHt3edP3K
pxDX4JgjopnRmjWraWL7TMdB7MPFKPaODvbf7fzt62sXj73VWnwoj1cb7VvB
96pN5kWy7Ng0S19niqczhUG18nBy9HSietPIbCdyiLtDqAfdy4Fsb2ZANjYE
zUuM3tlQtaehYnd96YntLdsbazauyl1XmJwd7pERzqrJT+i8/ZNUoiopqaLG
kUxb4EzvjPNiV+hjR3rvt//4xTdn9n2ya+0Hm1fvLU0pjQvJS4hIj+SmBvvm
hfhk+jHiGNQYln2Yl0OwrxPf0ymCaRfqSg50NHWz1CbrLjZUf9FAfbGjhVES
j1Ofn9JUmNhaFLu+IKYoMSg6kBFAp7hb6XLsDbnOxnwvu68/PCcVjojEj6Y1
7tpnxEo6dedBlXglQcOWTILehP0kGur57ds3WtcebSzfujqvpTyrKSeuKiW2
Mie5lB+QFuKfxWGWBTOK2Q6JrlZ8BoXnasNxMAM+jvpLyerPGy3+q+7iv+mq
PedooR/sTsvm+eSE+iayXcJdAKO5N1nfzVzT3ULb2VLX3Ubfx940zMM+jut1
/V+fg8vPKLyja58IUHW7mjTOT8NKKueFfUECPLpKBQMXzhzZXl65dWVWc0Vm
c3ZafTK/Ji+qKJaTG+WXEeaTynZMcbeIoGqzSeoMEw2q9osWS/9iovF3ksaL
DkYa9obqNBMNHztjPoMcbGfEtNalm6k7m6q7Wmi5knQZVsbuFAumrZW/s02w
u0NCkFdqBOfQjlY4KORms4jtj5kV/m1iX6gAJZWCoaO72zbVla1rKGwqStmR
FrU/L6YqISQz3DfRxybYxZxD1fYxX8Q0+AfTdAXLUteLbBRIIwXZm4H6UYyZ
VgbuNoaO5lqOphquJG1nUz0XCz0m2dgLfutkGehO5Xo6sN3tQr0YEMRaaisv
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
JyqQFeLtzGbY+LpYB3g4xof5F2bEVxZnlhZl1lYUrl29snlN5da2xkP7d5w9
fezCW2e/+eSjm9e+vfvLdWwpskQov+kSD13yxrIUWwmGqRRb+D6V/UylUiUF
Q32kzoWV7GGUEF26cG7XxoY9zVXb60rWl2fUFyXV5iWUpkWm8QOiA72CPZz9
abY0KxLVzIhiqGetr2mpuxyUpLPCXGuZrYmGs7muC0nf1dLIlWziamPKsiP5
OlMC3WhR/p4ZkSHl2ckb1qw6eXj3px+ev3vrR2wWTCYZwe65kwkxg8In0GVT
mpBUBVWFzxxZyVBLRCr84eqXpw/tPL696cCG6j1Nq1sqcivSYxNC/DgsGsPe
0sZUx0x3mYn2MmMtNRPtpea6y0y1l5hoLTbXVbM0WEE20KAaaTuZAStjBtmM
aUvydrQJYjjAcMlhUGFYjPB2ieWw8mLDytPjmyoLD+3ceP37b+ALgiuRN5bR
3b5T6FzsBxTKMYUOEzoLUEIhPiJAuBjuh3gF1crxnRsOb2vZWFuWExvOopGt
jDRJRloWhpqWhlqgJANNC30NbC2W3grYSTLSMTfQIhlpkAzU4Z0UM11bkr4D
2ZjhQPJ2we4OCHS3D/d1TQjyivFnxgd6rkyJqspJqi5Ka6ouufLZJSyBJ+4d
Fo+MwzINHwRhprYkxmo0uc7OrmSKRaQD3Q+++PjCyYM7WuqKU/hstjPJ28HU
086UZqZpq7PE2UjdVm+ZtbaaldZSSx01c62lZppLwAEttJdbGapb6S23MdSg
mmrammlhK/2sDd1tDP0crdg0ay7DLtyLHubjEh3AKkjhl2TFlWdEr6vIaVlT
dufGNaAkwGZ5sLpAlbikrBOtTs52TPyfvKCeOSIRAoXGKsyLpcLezvafvr38
6YXXXju26+Dmxu3rKjfVlTWX560tzKjOiy9JCcuJD8qOC0zh+8Zy3fn+9HA/
p0Cmk58zdl+hh72lC9kEyhy6hZ6TsZadoTrEMR8HyxCmI5hWRlRASUbU6oKk
4lR+XgKvICni1WN74SuWoi9r/OVMIrM2hvkQOSeJ0mormYyYL5DJt2WKoUsh
WDImEgkFI5DeD/Z29fY86Gy/df/2jV9vfP/dv/75+eWLH7579u1Xj718dMeu
jXVZcSFxXK/CxNDSFP664oyGgtSchND4YE+oqXe0NmD3neB3nivWeE8nKmRf
qspcqCl/Djaui6XyPhUu8jUAxEMc5H8jpyyV1y9KUzO4fnflmwNbW0tTwuty
Yw6uX7WpuqgmNzkp0CPA2dzH0Sw62OfyhxdQl09xE8FMr1EyQ503GXc+UkVX
H52VRHHHA2DEWlhS5DZwlQKRwuqkQsFAx/2vPn5vW/OawpTorBje2pUZrZU5
61amJ4X6+TMcmHaWbtYmHGdLSEW2b6gf6u2UKsreWZ3yH85ExXMguCFo+Cyz
cNwMsnwmVCy6f+f2B2+/ubmxtjg1JpXnk8bzKkvkQYZWEMeFIghCvRPZxM3e
ksOwj/ZnpPKDWtaUd9z5BbVGZfKVlgsbjuYkhJGJ8WEbzxWRpaGegWiov+vq
V5fPnDq6obo4L5bH93GN8nOD+jol1AfqRCilaRb6TiQDd1tTLycrSB6CPRyg
iszm+x3bvxMqdHQnBbbScta3yT0BIlJMnYuRQREikQmGhu/88sult1/fu7lp
/aqC6sLEisxIqBkTg5hhHvYcF7IbxcTJSt/RCgzJ2NORHMRyCmI6hHs78n0c
YziuTZW53372PrYSEiI6fk89Oopszov9Hr8gUxJLUP8Nn16RYu2U+7dvfvHR
B6+fOnBgW/PGNeXrKgqaynLXrcwuT4lO4fpAzulKNgJHY9gYu9sa+7vahHjT
eD5OET7OAW6QkZIj/VwaSjM/vfC6cHgA92p5eiNRLLaUSB5/nJmTPIztaJJL
LHhw6+ZH77z+ysGdp/ZuObmn7eUDLQc3VbXV5FdmRMUHeAS42HnZWblZmXs6
WIFCOYPdXeLP4PvSIUb5OVnAa3Zc2KHdm3++dgXqP/hA+OBhkbyth2pAvB58
+oRgNdDT+fH7FyCqHNu99fS+ra/ubTu5fd2Bpsq6/My86NBYf3A3x0AGOdCD
EsJ2DOE4xPoxEjjMaD/XYDeqvxOZ62afnxh+YNPaa19+KBMNKbpUMGRChv7w
xiWpUmt07jnPYxC8HpTP/KI5iDs3fzyyp21DXfnOlprdLdX7NtSsLU6vzUvK
jw1O43kmc5lJQcwkLis+iAUlXoQfAzSMReV70zh0ShDLuaa08P13zj24exs9
8OohDZm80YfcD0s8sEdD4Q3Ah23SJ1ekSr1uPGOX/P7rz5vW1a5bWdhcVthS
VgA5dl1OfFV6JCQABVGcnEh2VoRveqh3crBHDMeN5+HgR7fxplnRKcYQzG1M
deytjTzdHf293X29GGwf9+jQwKzk2FWlRS2NdUf27z7/5mvXrn4DGEdHhhT3
XsjPAWrCJ9+uCOuX4qvFPvvwnU31lVvX5G6oTNtYkVafF1ueFJofycmO4MSx
wYrcQ71dg5g0XzrVzdaCYqJnpr3cSH2J6YolZupLQS00sbsLobK21Venmeo6
mOvRSAaOFvrwZm8XKmg0l12QntDa1HBg9/afvr8KEQwbEEWPeC7WEyGKb1bx
qCXRv/75/uGtjbvXr64vTqnKjVuZGp4dzYkOZIT6Ons7Wzrbmtqa65nqqGmp
Pbf8xWfVnn9WbdFfVyx9TkNtkeayxVrLl2irLdZdsdhUZ7mVkSbZWMvRXIdl
B5GfBANlsIdzsCed789KDg+I5PpUFKRXFGW99vJx9KynJz9aoUoZlc/obq/+
jtvnTu7bsb5+fWVxXjw/nuvHcXNk2VtZGWiZaK/QVVuis3Sx9pJF8IptL1uq
u1xNb8Uyg+WLdNSe11+xyEhzKVIT7WWm2kut9FZQTXTszfRcbczcqSQvmg18
FNeDXlWcuWdTY0VhWk153uefvA/ZOzYmPuGwlHwQm3TG1m+Pdtz5+dzJXTtb
qrJjuRCLSNpLdRb9Te1/nl38l2fU/vLfS5/985Jn/t/i//4vpIv+/J+gLz7z
X8//+T9efObPi/7yzIvP/vcLf3lm6d//tuLFf2gteV5z8XOA0Ux3haWBuj3J
wNPRGuyqPDsJcomCtJhVxRl1q4rv3v4F+8aebFbEAmCJYl063k8WCwa7b12/
+u3nlz5859XzZ4+8fGzbmRM7TxzefHTvRtDDe5oP7Fy3Z2v99o3Vm9ZXbFi7
cmN1/rrKrJrClNKM6Lyk0PRIzG25HlRPV0eGI8XW3ABsjGqizWbYQgVdmBxe
XZhRmpnA57iz3R04XvSPL70DacUTnmgpnsCBHs4hRY0UsUSx3kNx/xfWdVF6
eJw8L5IoUlbZwyUixKJitL/n/q/vnD1ZnpcaFeBZlhm3raHsYGtNc3lWTnxE
gLsj3dqYTjFNiw2FLAWLAU/281HHtVIfLjCQiUUSIdGDVUyEylAKNCIYfdDR
9fONm99c+e79Dz5+9cwb+w8f2bl33+bt27Zu37Zr1479+/bs2NJWU1mWmxST
l8hfW5a1v7V2c23pyvQ4rrerk42prZku1VTTw94snON+aO92fLmchOg5jD3D
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
                "], {{0, 150}, {
                100, 0}}, {0, 255}, ColorFunction -> RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], BaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {100, 150}, PlotRange -> {{0, 100}, {0, 150}}], 
             Annotation[#, {
              "URL" -> 
               "http://www.wolframcdn.com/waimage/hset051/84e/\
84e8cbcfcf9703bc6342912bcaee015c_v001s.jpg", "Dimensions" -> {100, 150}, 
               "Source" -> 
               "http://www.faqs.org/photo-dict/phrase/2960/spring.html", 
               "Popup" -> 
               "hset051/84e/84e8cbcfcf9703bc6342912bcaee015c_v001ms.jpg", 
               "MaxWidth" -> "MaxWidth", "MaxHeight" -> "MaxHeight"}, 
              "Image"]& ], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Global`GraphicsBoxOptionsDefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Global`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Global`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Global`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$, Typeset`pod4$$, Typeset`pod5$$, Typeset`pod6$$, 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "images of springs", "score" -> "0.5003503401360544", "level" -> 
        "medium"}, {"\n   ", 
        XMLElement[
        "alternative", {
         "score" -> "0.38441156462585035", "level" -> "medium"}, {
         "two springs"}], "\n  "}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/WordDataSourceInformationNotes.\
html", "text" -> "Word data"}, {}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/WordDataSourceInformationNotes.\
html", "text" -> "Word data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
     "Word", "timedout" -> "", "timedoutpods" -> "", "timing" -> "6.438", 
     "parsetiming" -> "0.857", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa1441fa6d2hdc3272b5d00003ed5d8b0h765e9457292744467150240182", "id" -> 
     "MSPa1451fa6d2hdc3272b5d00002h031hda7hgi478h", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "62", "related" -> "", 
     "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "0", "datatypes" -> 
     "Word", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.334", 
     "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
     "id" -> "", "host" -> "http://www4f.wolframalpha.com", "server" -> "40", 
     "related" -> "", "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2017, 6, 23, 9, 44, 8.179265`7.665289266103294}, "Line" -> 14, 
    "SessionID" -> 29210361777803074898}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
   17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, 
   Typeset`chosen$$ = {
   "Image:WordData", "Result", 1, 1, "Input", 
    "Entity[\"Word\", \"springs\"][EntityProperty[\"Word\", \"Image\"]]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "two images of springs"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
         Typeset`pod32$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{193., {74., 17.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
          Typeset`pod32$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa1441fa6d2hdc3272b5d00003ed5d8b0h765e9457292744467150240182", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[14]:=",ExpressionUUID->"8731479e-1a49-46ad-b932-f175b4353d74"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQdYG1e2+Pd77/33Jbv7spvEBdv0XgUIIYpAIJDoQoBAFNF778U0m2LA
GIMx7r2XuCSxU5w4cZw4zZvudRIncRwntmMb0zvq78xcaSyqRYmx9//Od6IM
g9DM/HTOueece2esE58TlPwff/rTnwqegZeguBJGfn5cKfcf8ENIdkFaSnZS
ond2YVJKUr59/H/Czq3wXyL8h23LnhKRqiwSJRErRCISS8WScQo7p1KxUIRU
JBCCou2FZqCqLCwrhGuhGagqc2SlDI3gpozlkaxAF5qBqjI7VhNxzZyVmNCF
ZqCqqM5qetNSZjWNG05kJRZKFpqBqjIVk5nimmhX07NS1oVmMDOZtXWJJGKk
kxrVRG5PdbwiZHamNZGVMpl/M1aqWNH0xMa54SNdT3nPvxmr6TGqiAvDgss4
VgjXQjOYscwLq6lwKbNCuJ7e2I5k1qweiUukJE/7OIhEFTizM62JrJRloa97
NqKKFaloXWMcEJdxuJ52VrJpcanCalJchPwfq6lMS45r7B7RZLLQFz0zGXft
E/cQTFS3KzmuCTvlpqX040Jf/VxlvlhNlKfdrmSqmdb/sZJNhmWq96g+FKqO
6/Ff79xFFVZTyYxYjcP1+K90jjJrH5ye1VQm9/Symt5m5oXVv5kPThTpWGec
npKKrJ722D6VTHTJcaZFoFD+cSKriUalDG2hr3J+5JGspGPzeVVYPe3xaipR
hZXyzonOOM3g+P8nq0lj11SsJoavhb7K+REClPKPqoCaihXx239XHxz3oyqg
pvI7gti/mQ8qO+C4Paqwmh6XsizgNc6XzIjVVNymQTQXu0KnBSqWyCRSGdqW
SsWKXTJM8f1i+Q/wn1SCEkZshxQU/sP2wE8SOAeRTCqSiIX4h4uxj8Lfh+/B
/nySqk81eqqDmghtIsOZkxKASmVCqfyaxVIJ2iMT4bSEUokYvzqhSIIzFcEb
xGIhvA+IwJ+NiiWjAFEglKL3KRQ/PxnaJ5I8PDHpZAXy3FlJx9Y7k1rXHFmh
a8FZyO0H/xnMaRDHKEIz4NguqUAiHcUsV6r0NqkIV6EMI4fZFlABGGimUoLD
hD+DPxLgH4POcBpck/5qHlkp758pKzkf7CqFIkzFuHlh5OAChwSjcN2Y1YG9
4ZaGu55YIh4ZGXhw77fvvv3i4qfvvfLRWyd+uPqlSDgEDqj4a1xx2vB3mA3K
ZLihYVc003N8QljBNYATCfFwhKcfAvjygY9MLJLJY5dkdKT//s3vf7j8zqVT
e4+1Vm0oSswP80zwsuXRTD0ttF2N1d3MdRJTYqU4S7FUJBQMjfR393Xe77x3
e+D3nx/c+PbejW877vwMnwQHwXj9Mayk0xbU8xCvJMMyiVCGojSKwWKBcLir
9+bX/7pw6rPTu040FDZnhkczbVi2hjRrA0eSJo2k4WqtybTR8aQaelBN3Chm
rjZmTiSdw5sbLr16+Pzhba/tWHd269ozWxrO7Wk9vbPpxLa1hzfVHt3edP3K
pxDX4JgjopnRmjWraWL7TMdB7MPFKPaODvbf7fzt62sXj73VWnwoj1cb7VvB
96pN5kWy7Ng0S19niqczhUG18nBy9HSietPIbCdyiLtDqAfdy4Fsb2ZANjYE
zUuM3tlQtaehYnd96YntLdsbazauyl1XmJwd7pERzqrJT+i8/ZNUoiopqaLG
kUxb4EzvjPNiV+hjR3rvt//4xTdn9n2ya+0Hm1fvLU0pjQvJS4hIj+SmBvvm
hfhk+jHiGNQYln2Yl0OwrxPf0ymCaRfqSg50NHWz1CbrLjZUf9FAfbGjhVES
j1Ofn9JUmNhaFLu+IKYoMSg6kBFAp7hb6XLsDbnOxnwvu68/PCcVjojEj6Y1
7tpnxEo6dedBlXglQcOWTILehP0kGur57ds3WtcebSzfujqvpTyrKSeuKiW2
Mie5lB+QFuKfxWGWBTOK2Q6JrlZ8BoXnasNxMAM+jvpLyerPGy3+q+7iv+mq
PedooR/sTsvm+eSE+iayXcJdAKO5N1nfzVzT3ULb2VLX3Ubfx940zMM+jut1
/V+fg8vPKLyja58IUHW7mjTOT8NKKueFfUECPLpKBQMXzhzZXl65dWVWc0Vm
c3ZafTK/Ji+qKJaTG+WXEeaTynZMcbeIoGqzSeoMEw2q9osWS/9iovF3ksaL
DkYa9obqNBMNHztjPoMcbGfEtNalm6k7m6q7Wmi5knQZVsbuFAumrZW/s02w
u0NCkFdqBOfQjlY4KORms4jtj5kV/m1iX6gAJZWCoaO72zbVla1rKGwqStmR
FrU/L6YqISQz3DfRxybYxZxD1fYxX8Q0+AfTdAXLUteLbBRIIwXZm4H6UYyZ
VgbuNoaO5lqOphquJG1nUz0XCz0m2dgLfutkGehO5Xo6sN3tQr0YEMRaaisv
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
JyqQFeLtzGbY+LpYB3g4xof5F2bEVxZnlhZl1lYUrl29snlN5da2xkP7d5w9
fezCW2e/+eSjm9e+vfvLdWwpskQov+kSD13yxrIUWwmGqRRb+D6V/UylUiUF
Q32kzoWV7GGUEF26cG7XxoY9zVXb60rWl2fUFyXV5iWUpkWm8QOiA72CPZz9
abY0KxLVzIhiqGetr2mpuxyUpLPCXGuZrYmGs7muC0nf1dLIlWziamPKsiP5
OlMC3WhR/p4ZkSHl2ckb1qw6eXj3px+ev3vrR2wWTCYZwe65kwkxg8In0GVT
mpBUBVWFzxxZyVBLRCr84eqXpw/tPL696cCG6j1Nq1sqcivSYxNC/DgsGsPe
0sZUx0x3mYn2MmMtNRPtpea6y0y1l5hoLTbXVbM0WEE20KAaaTuZAStjBtmM
aUvydrQJYjjAcMlhUGFYjPB2ieWw8mLDytPjmyoLD+3ceP37b+ALgiuRN5bR
3b5T6FzsBxTKMYUOEzoLUEIhPiJAuBjuh3gF1crxnRsOb2vZWFuWExvOopGt
jDRJRloWhpqWhlqgJANNC30NbC2W3grYSTLSMTfQIhlpkAzU4Z0UM11bkr4D
2ZjhQPJ2we4OCHS3D/d1TQjyivFnxgd6rkyJqspJqi5Ka6ouufLZJSyBJ+4d
Fo+MwzINHwRhprYkxmo0uc7OrmSKRaQD3Q+++PjCyYM7WuqKU/hstjPJ28HU
086UZqZpq7PE2UjdVm+ZtbaaldZSSx01c62lZppLwAEttJdbGapb6S23MdSg
mmrammlhK/2sDd1tDP0crdg0ay7DLtyLHubjEh3AKkjhl2TFlWdEr6vIaVlT
dufGNaAkwGZ5sLpAlbikrBOtTs52TPyfvKCeOSIRAoXGKsyLpcLezvafvr38
6YXXXju26+Dmxu3rKjfVlTWX560tzKjOiy9JCcuJD8qOC0zh+8Zy3fn+9HA/
p0Cmk58zdl+hh72lC9kEyhy6hZ6TsZadoTrEMR8HyxCmI5hWRlRASUbU6oKk
4lR+XgKvICni1WN74SuWoi9r/OVMIrM2hvkQOSeJ0mormYyYL5DJt2WKoUsh
WDImEgkFI5DeD/Z29fY86Gy/df/2jV9vfP/dv/75+eWLH7579u1Xj718dMeu
jXVZcSFxXK/CxNDSFP664oyGgtSchND4YE+oqXe0NmD3neB3nivWeE8nKmRf
qspcqCl/Djaui6XyPhUu8jUAxEMc5H8jpyyV1y9KUzO4fnflmwNbW0tTwuty
Yw6uX7WpuqgmNzkp0CPA2dzH0Sw62OfyhxdQl09xE8FMr1EyQ503GXc+UkVX
H52VRHHHA2DEWlhS5DZwlQKRwuqkQsFAx/2vPn5vW/OawpTorBje2pUZrZU5
61amJ4X6+TMcmHaWbtYmHGdLSEW2b6gf6u2UKsreWZ3yH85ExXMguCFo+Cyz
cNwMsnwmVCy6f+f2B2+/ubmxtjg1JpXnk8bzKkvkQYZWEMeFIghCvRPZxM3e
ksOwj/ZnpPKDWtaUd9z5BbVGZfKVlgsbjuYkhJGJ8WEbzxWRpaGegWiov+vq
V5fPnDq6obo4L5bH93GN8nOD+jol1AfqRCilaRb6TiQDd1tTLycrSB6CPRyg
iszm+x3bvxMqdHQnBbbScta3yT0BIlJMnYuRQREikQmGhu/88sult1/fu7lp
/aqC6sLEisxIqBkTg5hhHvYcF7IbxcTJSt/RCgzJ2NORHMRyCmI6hHs78n0c
YziuTZW53372PrYSEiI6fk89Oopszov9Hr8gUxJLUP8Nn16RYu2U+7dvfvHR
B6+fOnBgW/PGNeXrKgqaynLXrcwuT4lO4fpAzulKNgJHY9gYu9sa+7vahHjT
eD5OET7OAW6QkZIj/VwaSjM/vfC6cHgA92p5eiNRLLaUSB5/nJmTPIztaJJL
LHhw6+ZH77z+ysGdp/ZuObmn7eUDLQc3VbXV5FdmRMUHeAS42HnZWblZmXs6
WIFCOYPdXeLP4PvSIUb5OVnAa3Zc2KHdm3++dgXqP/hA+OBhkbyth2pAvB58
+oRgNdDT+fH7FyCqHNu99fS+ra/ubTu5fd2Bpsq6/My86NBYf3A3x0AGOdCD
EsJ2DOE4xPoxEjjMaD/XYDeqvxOZ62afnxh+YNPaa19+KBMNKbpUMGRChv7w
xiWpUmt07jnPYxC8HpTP/KI5iDs3fzyyp21DXfnOlprdLdX7NtSsLU6vzUvK
jw1O43kmc5lJQcwkLis+iAUlXoQfAzSMReV70zh0ShDLuaa08P13zj24exs9
8OohDZm80YfcD0s8sEdD4Q3Ah23SJ1ekSr1uPGOX/P7rz5vW1a5bWdhcVthS
VgA5dl1OfFV6JCQABVGcnEh2VoRveqh3crBHDMeN5+HgR7fxplnRKcYQzG1M
deytjTzdHf293X29GGwf9+jQwKzk2FWlRS2NdUf27z7/5mvXrn4DGEdHhhT3
XsjPAWrCJ9+uCOuX4qvFPvvwnU31lVvX5G6oTNtYkVafF1ueFJofycmO4MSx
wYrcQ71dg5g0XzrVzdaCYqJnpr3cSH2J6YolZupLQS00sbsLobK21Venmeo6
mOvRSAaOFvrwZm8XKmg0l12QntDa1HBg9/afvr8KEQwbEEWPeC7WEyGKb1bx
qCXRv/75/uGtjbvXr64vTqnKjVuZGp4dzYkOZIT6Ons7Wzrbmtqa65nqqGmp
Pbf8xWfVnn9WbdFfVyx9TkNtkeayxVrLl2irLdZdsdhUZ7mVkSbZWMvRXIdl
B5GfBANlsIdzsCed789KDg+I5PpUFKRXFGW99vJx9KynJz9aoUoZlc/obq/+
jtvnTu7bsb5+fWVxXjw/nuvHcXNk2VtZGWiZaK/QVVuis3Sx9pJF8IptL1uq
u1xNb8Uyg+WLdNSe11+xyEhzKVIT7WWm2kut9FZQTXTszfRcbczcqSQvmg18
FNeDXlWcuWdTY0VhWk153uefvA/ZOzYmPuGwlHwQm3TG1m+Pdtz5+dzJXTtb
qrJjuRCLSNpLdRb9Te1/nl38l2fU/vLfS5/985Jn/t/i//4vpIv+/J+gLz7z
X8//+T9efObPi/7yzIvP/vcLf3lm6d//tuLFf2gteV5z8XOA0Ux3haWBuj3J
wNPRGuyqPDsJcomCtJhVxRl1q4rv3v4F+8aebFbEAmCJYl063k8WCwa7b12/
+u3nlz5859XzZ4+8fGzbmRM7TxzefHTvRtDDe5oP7Fy3Z2v99o3Vm9ZXbFi7
cmN1/rrKrJrClNKM6Lyk0PRIzG25HlRPV0eGI8XW3ABsjGqizWbYQgVdmBxe
XZhRmpnA57iz3R04XvSPL70DacUTnmgpnsCBHs4hRY0UsUSx3kNx/xfWdVF6
eJw8L5IoUlbZwyUixKJitL/n/q/vnD1ZnpcaFeBZlhm3raHsYGtNc3lWTnxE
gLsj3dqYTjFNiw2FLAWLAU/281HHtVIfLjCQiUUSIdGDVUyEylAKNCIYfdDR
9fONm99c+e79Dz5+9cwb+w8f2bl33+bt27Zu37Zr1479+/bs2NJWU1mWmxST
l8hfW5a1v7V2c23pyvQ4rrerk42prZku1VTTw94snON+aO92fLmchOg5jD3D
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
    "], {{0, 150}, {100, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Source" -> "http://www.faqs.org/photo-dict/phrase/2960/spring.html", 
      "URL" -> "http://www.wolframcdn.com/waimage/hset051/84e/\
84e8cbcfcf9703bc6342912bcaee015c_v001s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{172.23046875, Automatic},
  ImageSizeRaw->{100, 150},
  PlotRange->{{0, 100}, {0, 150}}]], "Output",
 CellChangeTimes->{3.707214201727647*^9, 3.707214248328021*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"63c59747-08e9-4f0f-b6b7-e26ca17e8ba2"]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"k", "*", "x"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "\n", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", " ", "20"}], "}"}]}], "}"}]}]}], "]"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "\"\<Spring constant\>\""}], "}"}], ",", 
     "0", ",", "3"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.707213072347517*^9, 3.707213087634897*^9}, {
  3.707214628073834*^9, 3.70721465664529*^9}, {3.707260068398162*^9, 
  3.707260097866288*^9}, {3.707265697205727*^9, 3.707265808422756*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"4ed4d70e-944e-4f74-a4e0-731f0a1b2423"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 3., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`k$$], 1, "Spring constant"}, 0, 3}}, 
    Typeset`size$$ = {360., {115., 120.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`k$74492$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$74492$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`k$$ $CellContext`x, {$CellContext`x, -3, 3}, 
        PlotRange -> {All, {-20, 20}}], 
      "Specifications" :> {{{$CellContext`k$$, 1, "Spring constant"}, 0, 3}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {160., 166.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.707213092541503*^9, 3.707213094478128*^9}, 
   3.707214193552392*^9, 3.707214657196001*^9, 3.707217842061283*^9, 
   3.7072397021536493`*^9, 3.7072403438564157`*^9, 3.707258853204669*^9, 
   3.70726002303968*^9, {3.7072600849593277`*^9, 3.7072601001146603`*^9}, 
   3.7072616018244*^9, {3.707265780199792*^9, 3.707265811454472*^9}},
 CellLabel->
  "Out[123]=",ExpressionUUID->"05bcb1f7-b266-445a-8cff-600530ea7c42"]
}, {2}]],

Cell["\<\
In the plot above the vertical axis is in Newtons and the horizontal axis is \
in centimeters. \
\>", "Direction",
 CellChangeTimes->{{3.707213052405911*^9, 3.707213060477323*^9}, {
  3.707213138146109*^9, 3.707213172353497*^9}, {3.707231582227373*^9, 
  3.707231586064958*^9}},ExpressionUUID->"f9603e7d-e68b-4213-8f02-\
8651dfec9004"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Describing the energy of a spring", "Subsubsection",
 CellChangeTimes->{{3.707167549333741*^9, 3.7071675712831*^9}, {
  3.707167669743259*^9, 
  3.707167676878799*^9}},ExpressionUUID->"8da1478b-f0d0-48db-be84-\
cb9c42348005"],

Cell["\<\
The potential energy of an object attached to a spring can be model to the \
following equation. (Note that potential energy is energy that can be \
acuired) [u=k/2*x^2]\
\>", "Text",
 CellChangeTimes->{{3.707188760382494*^9, 3.7071888472820263`*^9}, {
  3.707188983461218*^9, 3.707188992596911*^9}, {3.7072132094786787`*^9, 
  3.707213212200893*^9}, {3.707213557773933*^9, 3.707213560733729*^9}, {
  3.707238581095673*^9, 3.70723862627966*^9}, {3.707240427172958*^9, 
  3.707240427506909*^9}, {3.707260330138051*^9, 
  3.707260344497295*^9}},ExpressionUUID->"80977f3c-1f52-49fe-92ce-\
db961da88f26"],

Cell["\<\
On the other hand, the kinetic energy of an object attached to a spring is \
model as most objects in motion.(Note that kinetic energy is the one of \
moving object) [k=m/2*v^2]\
\>", "Text",
 CellChangeTimes->{{3.70721321745673*^9, 3.707213230538546*^9}, {
  3.707238630983357*^9, 3.707238648927112*^9}, {3.707260348353372*^9, 
  3.7072603659892683`*^9}},ExpressionUUID->"1f820172-8b0b-4fa4-bd97-\
b1d50077aa98"],

Cell["\<\
While the total energy of a system in a conservative system is just the sum \
of the potential and kinetic energy. (Note that the definition of energy is \
not totally defined) [E = u+k]\
\>", "Text",
 CellChangeTimes->{{3.707188998850979*^9, 3.7071890999739*^9}, {
  3.707238653087153*^9, 3.70723869555018*^9}, {3.707260370068901*^9, 
  3.707260403146845*^9}},ExpressionUUID->"b6c084d8-0e29-49e6-ab7a-\
72dec3671a3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "*", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "/", "2"}]}], ",", 
       RowBox[{"e", "-", 
        RowBox[{
         RowBox[{"k", "/", "2"}], "*", 
         RowBox[{"x", "^", "2"}]}]}], ",", "e"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", " ", "20"}], "}"}]}], "}"}]}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "\"\<Spring Constant\>\""}], "}"}], ",", 
     "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e", ",", "3", ",", "\"\<Toatl Energia\>\""}], "}"}], ",", "0", 
     ",", "5"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.7072132725266943`*^9, 3.707213395251836*^9}, {
   3.707215089993672*^9, 3.7072151614000397`*^9}, {3.707215565002624*^9, 
   3.707215567175767*^9}, 3.7072281429832983`*^9, {3.707258889766262*^9, 
   3.707258894939528*^9}, {3.707260235311366*^9, 3.707260316659114*^9}, {
   3.7072658554159822`*^9, 3.7072658586710587`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"d636bd58-3924-4979-832d-145a2e065650"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e$$ = 
    3.8200000000000003`, $CellContext`k$$ = 1.475, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`k$$], 1, "Spring Constant"}, 0, 3}, {{
       Hold[$CellContext`e$$], 3, "Toatl Energia"}, 0, 5}}, Typeset`size$$ = {
    360., {111., 116.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`k$79692$$ = 
    0, $CellContext`e$79693$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`e$$ = 3, $CellContext`k$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$79692$$, 0], 
        Hold[$CellContext`e$$, $CellContext`e$79693$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`k$$ ($CellContext`x^2/
          2), $CellContext`e$$ - ($CellContext`k$$/
          2) $CellContext`x^2, $CellContext`e$$}, {$CellContext`x, 0, 3}, 
        PlotRange -> {All, {-20, 20}}], 
      "Specifications" :> {{{$CellContext`k$$, 1, "Spring Constant"}, 0, 
         3}, {{$CellContext`e$$, 3, "Toatl Energia"}, 0, 5}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{405., {170., 176.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.707213330781002*^9, 3.707213395519217*^9}, 
   3.707214193613907*^9, {3.7072151487206583`*^9, 3.707215161702671*^9}, 
   3.7072154376376677`*^9, 3.7072155676029167`*^9, {3.707217842327258*^9, 
   3.7072178436002817`*^9}, 3.70723970237934*^9, {3.7072403441122637`*^9, 
   3.707240345927126*^9}, 3.707258853454863*^9, 3.707258895355547*^9, 
   3.7072600231615477`*^9, {3.70726030428757*^9, 3.7072603174395*^9}, 
   3.7072616020068913`*^9, 3.707265780267358*^9, 3.707265860094961*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"b7551db4-b9d3-42b0-aaa8-f933e3d18847"]
}, {2}]],

Cell["\<\
On the top plot the blue curve is the potential energy of a spring, the \
orange curve is the kinetic energy and the green line is the energy of the \
system . The horizontal axis represent the displacement on the x direction, \
meters, and the vertical axis is representing the energy in terms of Jules.  \
\
\>", "Direction",
 CellChangeTimes->{{3.707213420767308*^9, 3.7072135076227417`*^9}, {
  3.7072152347861*^9, 
  3.707215321899273*^9}},ExpressionUUID->"4bae7a0b-dc20-4570-94a3-\
bdc09bea6a34"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Understanding angular position, velocity and acceleration", \
"Subsubsection",
 CellChangeTimes->{{3.7071672871932592`*^9, 3.7071673095762587`*^9}, {
  3.7071674334886208`*^9, 
  3.707167460864107*^9}},ExpressionUUID->"1ff8c917-3ebd-4aad-a5a2-\
ace1645d1923"],

Cell["\<\
Just like linear motion, the rotational motion of an object is primarily \
described by the angle between a vector and an axis; thus the term of angular \
position, velocity, and acceleration.Moreover, the mathematical properties \
are the same as the ones for linear kinematics.[\[Theta]\[CloseCurlyQuote]\
\[CloseCurlyQuote][ t ]= \[Alpha] [ t ], \[Theta]\[CloseCurlyQuote][ t ] = \
\[Omega][ t ], \[Theta][ t ]=\[Theta][ t ]]\
\>", "Text",
 CellChangeTimes->{{3.705683964567428*^9, 3.705683981488122*^9}, {
   3.707166412890561*^9, 3.70716646963901*^9}, {3.707189108141831*^9, 
   3.707189178510264*^9}, 3.707212869489019*^9, {3.707213535328527*^9, 
   3.707213545477747*^9}, {3.707213693865719*^9, 3.707213708908949*^9}, {
   3.707213967956562*^9, 3.707213983461431*^9}, {3.707214024937899*^9, 
   3.707214033753559*^9}, {3.707214076375463*^9, 3.707214092619502*^9}, {
   3.707238708589313*^9, 3.707238736436699*^9}, {3.70726050355017*^9, 
   3.707260583813043*^9}, {3.7072615534777308`*^9, 
   3.707261556059806*^9}},ExpressionUUID->"281a65ad-d577-422d-bb55-\
ddb3accd6332"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Understanding pendulums dynamics ", "Subsubsection",
 CellChangeTimes->{{3.707167477653734*^9, 
  3.7071674916212873`*^9}},ExpressionUUID->"ecbb6754-67d0-4b9b-988b-\
7bc674862158"],

Cell["\<\
The forces acting on a pendulum can be reduced to the following equation \
since only gravity can be said to be acting in such system.[F= m*l*\[Omega]^2 \
]\
\>", "Text",
 CellChangeTimes->{{3.7072141075109243`*^9, 3.707214154997218*^9}, {
  3.707214716163579*^9, 3.707214744522851*^9}, {3.707238742308573*^9, 
  3.707238756492188*^9}, {3.7072604928944597`*^9, 3.7072604960068398`*^9}, {
  3.70726059987639*^9, 
  3.707260628808832*^9}},ExpressionUUID->"8203df7a-afbf-4dd6-8655-\
d15f89d2b00a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Describing the energy of a pendulum", "Subsubsection",
 CellChangeTimes->{{3.707167686857379*^9, 
  3.707167698334489*^9}},ExpressionUUID->"dd20b062-483e-4b7c-a7f9-\
282d53d44199"],

Cell["\<\
The potential energy of a pendulum depends on the y displacement, assuming \
that the lowest point is the origin, and the kinetic energy is described by \
the common kinematic equation.[u=mgy] [k=m/2*v^2][E = u+k]\
\>", "Text",
 CellChangeTimes->{{3.705104661930198*^9, 3.705104689215759*^9}, {
  3.7051047393916287`*^9, 3.705104783753166*^9}, {3.7051049729169855`*^9, 
  3.7051050045267935`*^9}, {3.705169822193218*^9, 3.705169825188218*^9}, {
  3.70721490088801*^9, 3.7072150455382566`*^9}, {3.7072604169726753`*^9, 
  3.707260433825366*^9}, {3.707260475017132*^9, 
  3.707260477495816*^9}},ExpressionUUID->"d27e6624-ad91-4935-9d35-\
b51bc301e896"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7072393458238277`*^9, 
  3.707239377572254*^9}},ExpressionUUID->"4eec8a8b-893d-418d-bce1-\
8caaa0e29168"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulating a single pendulum ", "Section",
 CellChangeTimes->{{3.707165701496155*^9, 
  3.707165713158931*^9}},ExpressionUUID->"c6447f84-9d03-45e4-9cd0-\
232b9327028a"],

Cell["\<\
In this section the text is going to examine the development of a model for a \
pendulum.  \
\>", "Text",
 CellChangeTimes->{{3.7072397963089657`*^9, 3.707239844278103*^9}, 
   3.707261527358873*^9},ExpressionUUID->"8dccfe37-340e-40ce-88de-\
decdbed9ab9a"],

Cell[CellGroupData[{

Cell["Modeling with Newton method a single pendulum", "Subsubsection",
 CellChangeTimes->{{3.707167735232841*^9, 
  3.707167778931068*^9}},ExpressionUUID->"85b09c20-e9ce-42e2-b51f-\
c40574dd5b91"],

Cell["\<\
By using the dynamics equations it is possible to model not only the forces \
interacting on a system but also to the motion of the object. The way to \
model such thing is to first reformulate the dynamics equation and afterwards \
switch acceleration and velocity to the derivative of position. The equation \
that is left is what scientist and engineers call a differential equation \
which has a unknown function as suppose of an unknown variable. From the \
dynamics equation we get the following differential equation for a single \
pendulum:
Dynamics 
Differential Equation \
\>", "Text",
 CellChangeTimes->{{3.7071657576111298`*^9, 3.70716581961714*^9}, {
  3.707167719233759*^9, 3.7071677273373613`*^9}, {3.707217454846068*^9, 
  3.7072174825608387`*^9}, {3.7072175192261133`*^9, 3.707217748616939*^9}, {
  3.70721804192712*^9, 3.707218139120265*^9}, {3.70721816977463*^9, 
  3.707218185790756*^9}, {3.7072395139245853`*^9, 3.707239574659376*^9}, {
  3.707240594133132*^9, 
  3.707240609395113*^9}},ExpressionUUID->"25cd4919-f640-42e7-b7f9-\
7b0b21046aaf"],

Cell["\<\
Note that the process of setting up the dynamics equation can be better \
developed by using a free body diagram. \
\>", "Direction",
 CellChangeTimes->{{3.7072395795143642`*^9, 
  3.7072396390897408`*^9}},ExpressionUUID->"cdc4e119-19d8-484b-9a63-\
5f556ed81bf3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", "10"}], ";", 
  RowBox[{"l", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.7072187596469316`*^9, 3.7072187648266497`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"2abbd6c0-6f35-4322-9bff-0569e48dc4d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"system1", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "\[Equal]", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "g"}], "/", "l"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
    RowBox[{
     RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", " ", 
     RowBox[{"Pi", "/", "4"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.707218191656088*^9, 3.707218230648992*^9}, {
  3.707218355302174*^9, 3.7072183880694017`*^9}, {3.70721869859807*^9, 
  3.7072187508031473`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"289c88cb-42b8-4e7e-a5c1-55a497d9e2e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "10"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
    FractionBox["\[Pi]", "4"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7072187415072813`*^9, 3.707218770782282*^9}, 
   3.7072308031683073`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"149476c2-455b-499a-8a08-a2498279a409"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving the differential equations ", "Subsubsection",
 CellChangeTimes->{{3.7071677848831167`*^9, 
  3.707167802869274*^9}},ExpressionUUID->"0114990e-073e-47e8-8e24-\
909ddd2cd3e4"],

Cell["\<\
With the differential equation already set up, one will then solve the \
differential equation. Although a differential equation can be solved using \
analytical methods, but for practical purposes the differential equation is \
going to be solve using computational methods. \
\>", "Text",
 CellChangeTimes->{{3.7071658391137867`*^9, 3.707165859945554*^9}, {
   3.7071667433328123`*^9, 3.707166757724824*^9}, {3.707230841151615*^9, 
   3.70723104774622*^9}, 
   3.7072396551696053`*^9},ExpressionUUID->"f61b974a-cba5-4a8d-bd20-\
69e568bb47ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "10"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
       FractionBox["\[Pi]", "4"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "t"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Code",
 CellChangeTimes->{3.707221611414051*^9},
 CellLabel->
  "In[109]:=",ExpressionUUID->"7f020812-020e-4184-aa6e-baedf34435bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj47KURU+yHpPzd0wYnD
3cQ/pwxYbn0s5j/SUFjDa77VP6JqSoOj/9k/IqE47Akn4D9fyGdclkmdP9Wb
k3tZVOU/euocfpZf1r+7wbiC/fHqP1k4rs4RF+W/gEqXStgX8D9b7SjHUwzp
v7tJtw/c7vI/VX8g5NCd5r/ziT6Xnbj1P1fwhVz0/Nu/2iBupGZS+D+BMlZH
UFayv1rNgu1ZJPs/M0y7yjXp1T+J0D+8VMb9P8VJ0ta/euQ/WwqypoYtAEB6
bCAlsOnoPz63Ng34kwFAbJ6i3q825z94j482beICQE34XnENtt8/f/LaffdM
BECc9Cuy7f+7PwX2WabgsAVA2P7BWOxa07/iJK2RzfwGQOFztipAh+O/jN7y
ms9kCED38k/F2Njov43DDGfVtAlADjOWsd6t579bMxlR8CALQN78My8vA+C/
p0NZHGqGDECiwTESwSK/v0t/barn0w1AIcK8dSkL0T+8RXRWej0PQP7mEgim
c+M/wpunYohHEEDSA5j47K/oP+XkrgoD7RBA4EeoQwoJ6D9vc69BiKARQJI7
FAJkBeE/pRcaWg9IEkAwNn+9mzDIP0EBfgGh/RJAvjKX3TQAzr8cu3sZ4q8T
QNviFXtpouK/oorjEiVWFEANcGXiSWHov4+fRJtyChVAjNFYF4Qh6L8oyg8F
wrIVQASzTk/w3eG/AMV038BXFkBT9/szrIHNvz4F00jKChdAHvrKhDTzxz8o
W5uT1bEXQB5JB7QK8+A/ePZcbetmGEAyPNZcfgroP3SniCgDEBlA0kMtDc2h
6D+vKE5UyrUZQHrYIOc8aeM/Ue8MD5xpGkAtvwfxAQ/RP5/LNatvERtA5y0y
7+a3v79T7VfWTccbQNWbALt6P+C/R98Tctt5HEAMrt9/s7Hnv+bmOe9qIB1A
5q/7HTnb6L/rM1n7BNUdQEwTsDo2iuO/nJbi6KB9HkAeUdp5YAXTv4zJBUfs
Ih9AVS/UumDXtT/iQSI0QtYfQB9TbDUERt4/8mdUAc0+IEBN/C/zRtvmP6ZR
FDB+mSBA/wtgeK7/6D96IyEXh/IgQINbjJ/KWeQ/JADj7pBFIUDIs3ZjDtbV
P4F/IQ6gnyFAjkQK5Xxysr+0CRUesPMhQMZCWPA8ONy/mjaFdcVOIkDyw0R9
N8vmv59LQoUyqCJAcE+VPPkH6b96a7SFoPsiQBJpRkkGBOW/CC6jzRNWI0DU
vRHrzvbVv2z7RgaIqiNAKgYhY3Y6pj8yFFD6//8jQNHGkg11DNs/QkjQgA==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$73772#1"]& ]}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {-0.7827547921982999, 
                    0.7853981633973385}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj47KURU+yHpPzd0wYnD
3cQ/pwxYbn0s5j/SUFjDa77VP6JqSoOj/9k/IqE47Akn4D9fyGdclkmdP9Wb
k3tZVOU/euocfpZf1r+7wbiC/fHqP1k4rs4RF+W/gEqXStgX8D9b7SjHUwzp
v7tJtw/c7vI/VX8g5NCd5r/ziT6Xnbj1P1fwhVz0/Nu/2iBupGZS+D+BMlZH
UFayv1rNgu1ZJPs/M0y7yjXp1T+J0D+8VMb9P8VJ0ta/euQ/WwqypoYtAEB6
bCAlsOnoPz63Ng34kwFAbJ6i3q825z94j482beICQE34XnENtt8/f/LaffdM
BECc9Cuy7f+7PwX2WabgsAVA2P7BWOxa07/iJK2RzfwGQOFztipAh+O/jN7y
ms9kCED38k/F2Njov43DDGfVtAlADjOWsd6t579bMxlR8CALQN78My8vA+C/
p0NZHGqGDECiwTESwSK/v0t/barn0w1AIcK8dSkL0T+8RXRWej0PQP7mEgim
c+M/wpunYohHEEDSA5j47K/oP+XkrgoD7RBA4EeoQwoJ6D9vc69BiKARQJI7
FAJkBeE/pRcaWg9IEkAwNn+9mzDIP0EBfgGh/RJAvjKX3TQAzr8cu3sZ4q8T
QNviFXtpouK/oorjEiVWFEANcGXiSWHov4+fRJtyChVAjNFYF4Qh6L8oyg8F
wrIVQASzTk/w3eG/AMV038BXFkBT9/szrIHNvz4F00jKChdAHvrKhDTzxz8o
W5uT1bEXQB5JB7QK8+A/ePZcbetmGEAyPNZcfgroP3SniCgDEBlA0kMtDc2h
6D+vKE5UyrUZQHrYIOc8aeM/Ue8MD5xpGkAtvwfxAQ/RP5/LNatvERtA5y0y
7+a3v79T7VfWTccbQNWbALt6P+C/R98Tctt5HEAMrt9/s7Hnv+bmOe9qIB1A
5q/7HTnb6L/rM1n7BNUdQEwTsDo2iuO/nJbi6KB9HkAeUdp5YAXTv4zJBUfs
Ih9AVS/UumDXtT/iQSI0QtYfQB9TbDUERt4/8mdUAc0+IEBN/C/zRtvmP6ZR
FDB+mSBA/wtgeK7/6D96IyEXh/IgQINbjJ/KWeQ/JADj7pBFIUDIs3ZjDtbV
P4F/IQ6gnyFAjkQK5Xxysr+0CRUesPMhQMZCWPA8ONy/mjaFdcVOIkDyw0R9
N8vmv59LQoUyqCJAcE+VPPkH6b96a7SFoPsiQBJpRkkGBOW/CC6jzRNWI0DU
vRHrzvbVv2z7RgaIqiNAKgYhY3Y6pj8yFFD6//8jQNHGkg11DNs/QkjQgA==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$73772#1"]& ]}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {-0.7827547921982999, 
                    0.7853981633973385}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"t", "\[Rule]", "t"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7072216124774523`*^9, 3.707230807870378*^9, 
  3.707239702587865*^9, 3.707240344241962*^9, 3.7072588536989717`*^9, 
  3.707260023351796*^9, 3.707261602201006*^9, 3.707265780431691*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"1698846f-9f37-4d66-af1d-2294380fc449"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modeling with different parameters ", "Subsubsection",
 CellChangeTimes->{{3.707168178930348*^9, 
  3.707168204503729*^9}},ExpressionUUID->"4421e623-066a-402f-8d76-\
9c341642f9f5"],

Cell["\<\
The following graph represents the sinusoidal function the angle between the \
pendulum and the positive x axis (see a diagram of a pendulum to make sense \
of it). Many of these curves have different initial conditions such as the \
initial velocity,initial position, initial length of the pendulum and \
gravitational acceleration. This plot also establishes the connection between \
the initial conditions and the motion of the object.\
\>", "Text",
 CellChangeTimes->{{3.7071658696923647`*^9, 3.707165871052054*^9}, {
   3.707165902932724*^9, 3.707165915516409*^9}, {3.707230517805438*^9, 
   3.7072305231851463`*^9}, {3.7072305664176598`*^9, 3.707230715313292*^9}, {
   3.707238800751583*^9, 3.707238837628756*^9}, {3.7072388678279257`*^9, 
   3.707238875650467*^9}, {3.707240440990807*^9, 3.707240479889675*^9}, 
   3.707261561495562*^9},ExpressionUUID->"24a90c9c-6860-4904-a00a-\
9ad4a1c5b5e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "}"}], "/.", "m"}], "]"}], ",", 
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"0.5", "*", 
      RowBox[{"Cos", "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]}], "]"}]], "Code",
 CellChangeTimes->{
  3.7072216551922483`*^9, {3.707230737155436*^9, 3.707230824697912*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"49eefece-2e28-41df-acf7-beb83c40a5d0"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwU23k4VN8bAHBL1iyDwWAwpJJCpdDmvEqLVLQhCd+oiEQopZAksmRLKrJV
llK2SlIHiRb7vu9m7kh2Idvv/v7yvM+9c8573nPuueczz1A6e/nYOS4ODo4z
Kzg4/v93ynX18OzLQL17qgYn5pXYyC5Y3kou/jzSO1NSV0LGMrnrKUNxV9EH
f6apDBmDyXPdlGlfxLuqt29JkY2myjY71MYFoLK4zutuCmyUtqv48fKeEBRw
yUTpGp2NNNrWDsZMhyPHrXo9ArJsFCh5eVH9RxQ6uHEHXi/NRr0m7yW/xcWg
5BGH7x0SbLQ9ZFHd0uUxunDgJp88hY2iyw32Te6JQwVeeUHDK9lohCvE6r50
Ako1Yp4x4mMjlQSHT+HTiYi7yjN6Gxcb1e4M3W9pnYzmc86jDwsE8m7Lql/7
IwXdWK97pfQvgVokZ39/iXuJrpp5fAtlE+hurpznfd40pB73k3qwj0Cbj6IV
pi7p6NmtTsOYNgKFhATQ/+x5jYQKoxu6fhBom1pGWn5mJjrDW3OuvYhAzPLK
Lf7Sb9Ehh/nj9h8IlHj7/svQ6SzUklRRrZVCoKsmcU5uGdmoOr7+xZVYAh1W
fLP5lHUOeptwz2F3KIH+FdZ+UfmRi47bHrR86EGg47O05k9x71GIuGCBsD6B
1MrV4pOOfkCcYes+t2wmEEfMTtt7vPko0Laerq1CoNdaNqPHXD6ilk2a39N4
CMR7OZVvaE8hOhq2wO/+lYU6dn2srJ4tRBV3Piq0ZLNQrtCvqHeZn9HaMl6H
mgQWsskYUbwtjVFgjkKq9w0W6pyQpYdMF6Ft2vk3WtVY6EDbquUl42Kk7RDX
xpRkobziDX2uGcWo7HdNzn0OFrofrpdmZl2CjITiRB41MJGOxtktq358Raef
dbz4dY2JIhzSDxXElaGF5KC0yYxBJOKS0vp9qQz51pf8RKGDKORq/Plmm3Jk
EOj2S+ryIAq8E+E7pfIdzTv2Rl/YNIh846/naWT+QH9fBwk/zxpAzrWG9JTP
FWhN7DUJ0Sf9aLh5T3q2YiXK70t7aOzRjy527dIuul2JKspUqlVM+tH535tM
OvdWIZPLhTrhK/rRGR5Zf+mqanSxukrBx74PvaRPT++9XIv+nfr9/oJ8LxpU
vLLzcGItSn+2wubwRA9SWTXqd6K2FmldrFdrKOtByevYorZadWjL8LYn3517
ULx25zrfmTr0362V+r/cu1G0ybczBT4NqA7fEbjl14Hu+D/8phHejLZLCx/+
pNqEnK4lGP393Iy4JYmdUd8akenF9NrPv5tRQ/TBocX/GpGayefOQ/tbkAK3
7Iqoxw2oRm5w+uJSC9IuH7k3zl2PFHK3rEl1akN5XSKFF8KqUX5vfYCiYSfa
ozIlPrS+BF1TFFDhv92L4kMWq5dqcvD59WLTno96EUfPTPuR23nYVEemjJ3Z
i1RP/t6wfdN7vMV4nf2vtl7k72AbUvzgI57wNnwdtqUP3f2eeNh0VRF26gra
Ikn0IcO9uXfP/yzDNvGCe5WNB5DEl74DwV212DhdXCrq3ABKimG5hO+pw3rv
ZFncNwfQm/1GSzvT6rB8pVrQYNoAOq5l2evvUo/bFg5WpnENomsf+P3iFhrw
Scvgk5rvB5Fsh1HFKc4WfFBO6PxOeRaKNuDZLJfdiZecw5Wit7JQYrJI9LxI
F84poXb+PsxC1Zr/mW9x6sKyF+VPPPVmoWPJRsGpKt14KF9j979uFpqpU03M
2teDg0yPKuQnE+jGADvM6Fkv3pnR2Cr6iUCrtCIeRJX34rHFUw8v1BMo4lJd
//WxXmz+4qyQ9Ao22pJ097yCfh9WnXL753GOjVbttr2V3dmHv0fENGmpDiHl
/fnuZ7gH8M1B2chgGEJBWxsom9cM4I3bEg73mw8h4vbNpMcHBnBsT2ppZNAQ
WntZg6EYMoDtNT/mjA8NoeeBJnETwoOYfmeXsyH3b3TRPL/hsPogrmkqXpck
9xt5nsvX1zk0iHW9fyaaHPqNFJQgMCdwEPNVtoe9zfyNhDR//t2xMIgLGDYH
+cp+IxuG9cScNBM7uw/wWHf9RhXeR5b1tZi4Se7PTRHRYcT91M3B2Z6JX15c
unjJZRhBaev39ZVMbPHFb823wGFEOV0aqD7IxCLifH30pGFU84NS826Bia9+
FD1VUTuMfqgkWpqrsfA+fqX967X+IDvBP6VtPixcXe+o3G/4B13mWjyeHcnC
5gnvF5/Y/EEb7G0D5V6wsKP2oTzBsD/IM9OsJv07C4fbXVMaIv6g6m+d314K
Elh2Y8lC0vIfZL7qnaWELIFT5oVaTkmNoNl1eili6wj8PjI57MeeEWTYXWFX
spfA7UWV82nPRpBX1z350esEtguhNdu8I+/Xiwrqv0vgETPbHFrFCAo+ZCVn
H0FgjtFZ+8C5ESQRmSColErg+wV7DIAyinLfO8uczCawRECY4uyaUTTGl5lF
+0TgNfIqTRdOjCJ/Ncafw5UEfks4Zys6jqINJVkmuJHAunkfQ5pvjyKJafuP
uJPAJT4r7B/EjiLZ3z6CxoMENjIy3rP/7SjiG/ypemmYwA1STxSWv40i5uvP
/2QmCWzVNzD3vmMUWfA62p+cI3D+zl3mEjxjyJJ6Al9bwcY3k/v2XqaMoYt3
P/laCbCxPn+g1i+5MeSSuDmsXpiNeZ3VldauHUP6Hd+bm8TY+Gd9ncidzWOo
/flqY3tJNn6wzXOha9cY8u4OZN2jsfGJBPmh7YZjCDv/erhVjo1pPF+bY06M
odj31iau8mzcedH+24T1GNLmOia6Q5GNk2uEc484jqHEjfsqIhlsfF47NzHj
KpnPRXc/TyU2Xh9nHsbrN4b6wtM1hsl4jHPJ62zoGAro2F/9h4zzLqQ4fIkd
Q+uu7be7RcbXKw+YyT4fQyJSOqNPyPb0tEYMrr4dQ4LRO932kf1xPY7aXFcw
htKCJad9yHzKl3QZGmVjqGBM2ms/mW+IXZfw/doxNPt5k3A8OR6Tn3fmBzvG
EOsFM8+XHK/kxnVsfWIM7U00uTVB1qPtYVVT/OQYkvzMcJsg6/Vs3q10bmkM
7atNeO5L1tP2P5mck4Lj6Oyqt0rxZL1Vy78kZEuOIy3aj/n9ywQe3mAXKqw0
jty6OffdJucnO1LAy2HDOHJk8EsakvO33eqEqdKecfT+5a44f3K+l7/O7bl1
ZBwdiqm+O0uuh9J1CZtaT42jKw1/TefJ9XJ4mi0U4TKONlQFqLwpJfCUd+Xl
npvj6OjL328jCgj8hD+7TjNoHJk3ViyOvSUwIecZW5U0jtx9Qh+tekzgBy9O
z8u/GUf/fT1iMBNCYG1NZHWpYBzZXTjusd+XwP67eVWE6sdRvEetntU5Aq+v
YAec7h5Hg9+OH1xtRuC6k5XsjN/jqPmJepHDAQIzHKLfGq6YQDHUdUOO5PNV
+EB5x72tE2jDld85loMsbCvD+6xJfwKpzjbelKpnYcEUNseaIxNotOXlb+Mi
8vl+n1VWen4CNTlncu55zMJTHXrHuGInkPnH4Udae1n46Xnld0efT6DQqVWc
UxosvHuMh5aUNYFU7O16tGnk889d2Yl+TKD8Au5He9lMvEHttMOtfxOo5WHm
vci7TFyfq1dRwTuJPr5R0LriyMQ3dilr0iUmUY/N0aJmEyb+bsKeKlg/ifoa
X9lpyzKx3bVrvrOWk6gV7iQZpw7iuNKoR254Eu2J8Ym1fzWA9xy59q/k1yRS
aFE8OxA0gIeaLc6It0yiz98Ofxu5MIB1fyutyh6bRN6ay93ZygO4QSzrzYjS
FNKuPvmGO6ofC1lXfHPwn0L7a5W9Xaz78Jhr9luf8Cm0+aKt5oBOH27wj3n8
MG4KqfzQ85gW7cPxGTaXivOmUMxJrpLJL71Y4+8UVWZwCrlfyF1yp/Vik1B5
u+97p5H44azBW+7dOOqTM9davr/I3U9AYb13K/asOj68U+IvepR8LvCzTCu2
7NVtOqb4F+3PC/yvNK8Fq/BxZ3jr/EVL2Cxfh92M8449Otp04S8qZD41HDNq
wk1snHj3+1/0Kvvby/B/dViWJoYGgmZQy3dXGWmZ75h9vlVX7eEMso8PjjPY
W47z3yVtdkmcQZYSz3Yuu5Rh0+Ob1yy8n0FNWo2CG8pLcUTYcWHqwAz6294q
0eRcjPl5Ytr36M2ijEMSKcJW7/DMuKxnysQsuquqocbv8wiVQb8re3EWUTmN
BHeYPEPRD145agrMoRVhawscw5PRZvWd1p8U55Dpm7n6Put05Gx/Zl/9oTn0
mmX+eNPNXMTsSqByp86hjXLnGHq+Rajhl0r22dP/kIWFioIirkR39dYz4i78
Q6vK/whYJFYh7exNDxrd/qE3Ttr9/b7V6HGM3qUDIf/Q76RkfSKhBln9Z75O
4/M/tCv3/Zi+RR0i/gYnzSnMo+NhH4+HFTSiBaXJiPC+eUSXfmbrKdOBMqPn
OH6OzCPX+8qPr9/oQFZ8HC7c8/PobdU0R1tbByoeFjpyVWIBScUV+WQ97kQB
H9YIWhosoI03U8dviXYjymELv7UvF5Axp/22heEetMqz+MoXh0X0KGVEduPl
fvRlzavxtR6LaGuJiLhXRD+yaIx2ifBdRI/jj0fZ5/ajyM32znaPFtHPS9mc
6/72I64/IhcFvy2ifaZFjzZeG0B9/1n+Z8pYQlr/DA+xzw8ibwp5yFm/hIL8
/k4p3CHPUVjTep3OEvLIgp2jzwbRMTr3mYXDS+j+G5ORM42DqLgp3TzZawmF
Wf7Qs9/FRIlGM8YjTUvoS6HYo9Y5Jtr5r6fKrG8JucyqXggSZaGWtJ+Hi/8s
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
AYD6FeAx379OUTOd
         "]]}},
      Annotation[#, "Charting`Private`Tag$73825#1"]& ], 
     TagBox[{
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
+a/PqnHx/wCtZYai
         "]]}},
      Annotation[#, "Charting`Private`Tag$73825#2"]& ], 
     TagBox[{
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
vDajzsP/A+nJZ4I=
         "]]}},
      Annotation[#, "Charting`Private`Tag$73825#3"]& ]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 9}, {-0.9999995629765838, 0.9999999999999831}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.707230785150518*^9, 3.707230825493506*^9}, 
   3.707239702728899*^9, 3.707240344352865*^9, 3.7072588538049297`*^9, 
   3.707260023455105*^9, 3.7072616023425922`*^9, 3.7072657805678663`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"59bc7de8-2e39-46a8-8e09-f7aab8824298"]
}, {2}]],

Cell["\<\
In the graph at the top the horizontal axis represents the time in seconds \
while the vertical axis represents the angle in radians. \
\>", "Direction",
 CellChangeTimes->{{3.707231079346249*^9, 3.70723108401016*^9}, {
   3.707231121422524*^9, 3.707231126398308*^9}, {3.707240501124984*^9, 
   3.7072405413443623`*^9}, 
   3.70726157465436*^9},ExpressionUUID->"855f084d-6f01-43d5-b3a3-\
b370deaadb8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizing the single pendulum ", "Subsubsection",
 CellChangeTimes->{{3.7071682141201572`*^9, 
  3.707168232087379*^9}},ExpressionUUID->"6a8a3402-fa98-4679-8b2e-\
e6685c810d4e"],

Cell["\<\
In order to fully visualize the motion of a pendulum, the following animation \
shows the motion of a simple pendulum. \
\>", "Text",
 CellChangeTimes->{{3.707165931252123*^9, 3.707165944699868*^9}, {
  3.707168979368449*^9, 3.707168984493991*^9}, {3.70723888213169*^9, 
  3.707238933386911*^9}},ExpressionUUID->"ef43a243-1dc6-4413-959b-\
cafd93e1db2b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"scene2", "[", 
    RowBox[{
    "\[Theta]1_", ",", "\[Theta]2_", ",", "l_", ",", "size_", ",", "m_"}], 
    "]"}], ":=", 
   RowBox[{"Show", "[", "\n", "\t", 
    RowBox[{"(*", "Pendulum1", "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"ContourPlot3D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", 
            RowBox[{"l", "*", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}], ")"}], "^", "2"}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y", "-", 
            RowBox[{"l", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], "^", "2"}], 
         "+", 
         RowBox[{
          RowBox[{"(", "z", ")"}], "^", "2"}]}], "==", 
        RowBox[{"size", "^", "2"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Sphere", " ", "1"}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{"Equation", " ", "of", " ", "the", " ", "surface"}], "*)"}], 
       "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"l", "*", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
          RowBox[{"2", "*", "size"}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"l", "*", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
           RowBox[{"2", "*", "size"}]}], ")"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"l", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
          RowBox[{"2", "*", "size"}]}], ",", 
         RowBox[{
          RowBox[{"l", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"2", "*", "size"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "size"}], ",", 
         RowBox[{"2", "*", "size"}]}], "}"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Boudaries", " ", "for", " ", "the", " ", "surface"}], "*)"}], 
     "\n", "\t", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"l", "*", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], ",", 
           RowBox[{"l", "*", 
            RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], ",", "0"}], "}"}]}], 
        "}"}], "]"}], "]"}], ",", 
     RowBox[{"(*", "Rod1", "*)"}], "\n", "\t", 
     RowBox[{"(*", "Pendulum12", "*)"}], "\n", "\t", 
     RowBox[{"PlotRange", "\[Rule]", "3"}], ",", 
     RowBox[{"Background", "\[Rule]", "White"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"ViewPoint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{"-", "2"}]}], "}"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"scene2", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "n", "]"}], ",", 
     RowBox[{"Sin", "[", "n", "]"}], ",", "2", ",", "0.5", ",", "2"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", 
     RowBox[{"4", "*", "Pi"}]}], "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.7071689919203663`*^9, 3.707169025216671*^9}, {
  3.7071694546949577`*^9, 3.707169465851852*^9}, {3.707172612183414*^9, 
  3.707172630334687*^9}, {3.707175792399271*^9, 3.707175815196906*^9}, {
  3.707213629350594*^9, 3.707213638981045*^9}, {3.7072216961891127`*^9, 
  3.7072216976355267`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"10d83644-9cb7-4e73-9446-cebfe5d3e9e5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 6.944344209405693, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 0, 4 Pi}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$73855$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$73855$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`scene2[
        Cos[$CellContext`n$$], 
        Sin[$CellContext`n$$], 2, 0.5, 2], 
      "Specifications" :> {{$CellContext`n$$, 0, 4 Pi, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {214., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7071690283127623`*^9, 3.707169468351789*^9, {3.707172180336217*^9, 
   3.707172183099449*^9}, 3.707172632606859*^9, 3.7071865298217287`*^9, 
   3.7072130932140512`*^9, 3.707213656525127*^9, 3.7072141942173367`*^9, 
   3.707217842393396*^9, 3.707221697953643*^9, {3.7072397032401733`*^9, 
   3.707239705619018*^9}, 3.7072403443972397`*^9, 3.707258853854487*^9, 
   3.707260023491447*^9, 3.707261602465747*^9, 3.7072657806102057`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"64c57818-5f6b-4e62-b8a2-64672a37fd58"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulating two spherical masses connected by a spring", "Section",
 CellChangeTimes->{{3.707165716989543*^9, 3.707165741529408*^9}, {
  3.7071665584850187`*^9, 
  3.707166562844597*^9}},ExpressionUUID->"57248514-3ebd-441b-b624-\
08dd5027ab13"],

Cell["\<\
In this section the text is going to develop the model for two balls \
connected by a spring over a frictionless surface. \
\>", "Text",
 CellChangeTimes->{{3.707239954827477*^9, 3.707239969584654*^9}, {
  3.7072400144647913`*^9, 
  3.707240061361581*^9}},ExpressionUUID->"0c0db958-25cd-4205-aaa5-\
0379d3b70b2d"],

Cell[CellGroupData[{

Cell["\<\
Modeling with Newton method a spring connected to two masses \
\>", "Subsubsection",
 CellChangeTimes->{{3.70716823893557*^9, 
  3.707168266790844*^9}},ExpressionUUID->"194d1dde-8654-4e06-8d1b-\
dd228678310d"],

Cell["\<\
Using the properties of a spring, the formulation of the dynamics of the \
system can set up. Moreover, just like the example of the pendulum the use of \
velocity and acceleration as the derivatives of position will bring rise of \
the differential equation that will model the motion of this spring system.\
\>", "Text",
 CellChangeTimes->{{3.707240624982223*^9, 3.707240748676083*^9}, {
  3.707241305447338*^9, 3.7072413781190166`*^9}, {3.707241424185388*^9, 
  3.7072414388325377`*^9}},ExpressionUUID->"1eccef0a-6756-4057-97ad-\
5366528056db"],

Cell["", "Text",
 CellChangeTimes->{{3.707165951787871*^9, 3.707165958427754*^9}, {
  3.707166521053357*^9, 3.707166556812869*^9}, {3.7072389703248177`*^9, 
  3.7072390211726923`*^9}},ExpressionUUID->"98580a8f-6a7d-4f6c-ac7d-\
761e36d6119c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"k", "=", "2"}], ";", 
   RowBox[{"m", "=", "0.5"}], ";", 
   RowBox[{"d", "=", "0.25"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "random", " ", "parameters", " ", "to", " ", "solve", " ", 
    "the", " ", "equation"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7072225205588512`*^9, 3.707222551834146*^9}, {
   3.7072284580450087`*^9, 3.707228458642686*^9}, 3.707261374467429*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"248ea055-76c2-4145-9fd9-cf60d7f3d053"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"system2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x1", "''"}], "[", "t", "]"}], "\[Equal]", " ", 
     RowBox[{
      RowBox[{"k", "/", "m"}], " ", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x2", "[", "t", "]"}], "-", 
        RowBox[{"x1", "[", "t", "]"}], "-", "d"}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x2", "''"}], "[", "t", "]"}], "\[Equal]", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "k"}], "/", "m"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x2", "[", "t", "]"}], "-", 
        RowBox[{"x1", "[", "t", "]"}], "-", "d"}], ")"}]}]}]}], 
   "}"}]}]], "Code",
 CellChangeTimes->{
  3.7072223546018257`*^9, {3.7072225730099154`*^9, 3.7072226494819593`*^9}, {
   3.7072227114480963`*^9, 3.707222729978784*^9}, {3.7072229807705708`*^9, 
   3.707222994124303*^9}, 3.7072282510044127`*^9, 3.707228659642048*^9, 
   3.707228702780143*^9},
 CellLabel->
  "In[113]:=",ExpressionUUID->"eb068efe-ced4-4d0e-bc7f-2b986647b315"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x1", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.25`"}], "-", 
           RowBox[{"x1", "[", "t", "]"}], "+", 
           RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"\[Theta]", "\[Rule]", 
         TagBox[
          TemplateBox[{RowBox[{
              StyleBox[
               TagBox["InterpolatingFunction", "SummaryHead"], 
               "NonInterpretableSummary"], 
              StyleBox["[", "NonInterpretableSummary"], 
              DynamicModuleBox[{Typeset`open$$ = False}, 
               PanelBox[
                PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj47KURU+yHpPzd0wYnD
3cQ/pwxYbn0s5j/SUFjDa77VP6JqSoOj/9k/IqE47Akn4D9fyGdclkmdP9Wb
k3tZVOU/euocfpZf1r+7wbiC/fHqP1k4rs4RF+W/gEqXStgX8D9b7SjHUwzp
v7tJtw/c7vI/VX8g5NCd5r/ziT6Xnbj1P1fwhVz0/Nu/2iBupGZS+D+BMlZH
UFayv1rNgu1ZJPs/M0y7yjXp1T+J0D+8VMb9P8VJ0ta/euQ/WwqypoYtAEB6
bCAlsOnoPz63Ng34kwFAbJ6i3q825z94j482beICQE34XnENtt8/f/LaffdM
BECc9Cuy7f+7PwX2WabgsAVA2P7BWOxa07/iJK2RzfwGQOFztipAh+O/jN7y
ms9kCED38k/F2Njov43DDGfVtAlADjOWsd6t579bMxlR8CALQN78My8vA+C/
p0NZHGqGDECiwTESwSK/v0t/barn0w1AIcK8dSkL0T+8RXRWej0PQP7mEgim
c+M/wpunYohHEEDSA5j47K/oP+XkrgoD7RBA4EeoQwoJ6D9vc69BiKARQJI7
FAJkBeE/pRcaWg9IEkAwNn+9mzDIP0EBfgGh/RJAvjKX3TQAzr8cu3sZ4q8T
QNviFXtpouK/oorjEiVWFEANcGXiSWHov4+fRJtyChVAjNFYF4Qh6L8oyg8F
wrIVQASzTk/w3eG/AMV038BXFkBT9/szrIHNvz4F00jKChdAHvrKhDTzxz8o
W5uT1bEXQB5JB7QK8+A/ePZcbetmGEAyPNZcfgroP3SniCgDEBlA0kMtDc2h
6D+vKE5UyrUZQHrYIOc8aeM/Ue8MD5xpGkAtvwfxAQ/RP5/LNatvERtA5y0y
7+a3v79T7VfWTccbQNWbALt6P+C/R98Tctt5HEAMrt9/s7Hnv+bmOe9qIB1A
5q/7HTnb6L/rM1n7BNUdQEwTsDo2iuO/nJbi6KB9HkAeUdp5YAXTv4zJBUfs
Ih9AVS/UumDXtT/iQSI0QtYfQB9TbDUERt4/8mdUAc0+IEBN/C/zRtvmP6ZR
FDB+mSBA/wtgeK7/6D96IyEXh/IgQINbjJ/KWeQ/JADj7pBFIUDIs3ZjDtbV
P4F/IQ6gnyFAjkQK5Xxysr+0CRUesPMhQMZCWPA8ONy/mjaFdcVOIkDyw0R9
N8vmv59LQoUyqCJAcE+VPPkH6b96a7SFoPsiQBJpRkkGBOW/CC6jzRNWI0DU
vRHrzvbVv2z7RgaIqiNAKgYhY3Y6pj8yFFD6//8jQNHGkg11DNs/QkjQgA==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$73904#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {-0.7827547921982999, 
                    0.7853981633973385}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj47KURU+yHpPzd0wYnD
3cQ/pwxYbn0s5j/SUFjDa77VP6JqSoOj/9k/IqE47Akn4D9fyGdclkmdP9Wb
k3tZVOU/euocfpZf1r+7wbiC/fHqP1k4rs4RF+W/gEqXStgX8D9b7SjHUwzp
v7tJtw/c7vI/VX8g5NCd5r/ziT6Xnbj1P1fwhVz0/Nu/2iBupGZS+D+BMlZH
UFayv1rNgu1ZJPs/M0y7yjXp1T+J0D+8VMb9P8VJ0ta/euQ/WwqypoYtAEB6
bCAlsOnoPz63Ng34kwFAbJ6i3q825z94j482beICQE34XnENtt8/f/LaffdM
BECc9Cuy7f+7PwX2WabgsAVA2P7BWOxa07/iJK2RzfwGQOFztipAh+O/jN7y
ms9kCED38k/F2Njov43DDGfVtAlADjOWsd6t579bMxlR8CALQN78My8vA+C/
p0NZHGqGDECiwTESwSK/v0t/barn0w1AIcK8dSkL0T+8RXRWej0PQP7mEgim
c+M/wpunYohHEEDSA5j47K/oP+XkrgoD7RBA4EeoQwoJ6D9vc69BiKARQJI7
FAJkBeE/pRcaWg9IEkAwNn+9mzDIP0EBfgGh/RJAvjKX3TQAzr8cu3sZ4q8T
QNviFXtpouK/oorjEiVWFEANcGXiSWHov4+fRJtyChVAjNFYF4Qh6L8oyg8F
wrIVQASzTk/w3eG/AMV038BXFkBT9/szrIHNvz4F00jKChdAHvrKhDTzxz8o
W5uT1bEXQB5JB7QK8+A/ePZcbetmGEAyPNZcfgroP3SniCgDEBlA0kMtDc2h
6D+vKE5UyrUZQHrYIOc8aeM/Ue8MD5xpGkAtvwfxAQ/RP5/LNatvERtA5y0y
7+a3v79T7VfWTccbQNWbALt6P+C/R98Tctt5HEAMrt9/s7Hnv+bmOe9qIB1A
5q/7HTnb6L/rM1n7BNUdQEwTsDo2iuO/nJbi6KB9HkAeUdp5YAXTv4zJBUfs
Ih9AVS/UumDXtT/iQSI0QtYfQB9TbDUERt4/8mdUAc0+IEBN/C/zRtvmP6ZR
FDB+mSBA/wtgeK7/6D96IyEXh/IgQINbjJ/KWeQ/JADj7pBFIUDIs3ZjDtbV
P4F/IQ6gnyFAjkQK5Xxysr+0CRUesPMhQMZCWPA8ONy/mjaFdcVOIkDyw0R9
N8vmv59LQoUyqCJAcE+VPPkH6b96a7SFoPsiQBJpRkkGBOW/CC6jzRNWI0DU
vRHrzvbVv2z7RgaIqiNAKgYhY3Y6pj8yFFD6//8jQNHGkg11DNs/QkjQgA==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$73904#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {-0.7827547921982999, 
                    0.7853981633973385}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
              StyleBox["]", "NonInterpretableSummary"]}]},
           "CopyTag",
           DisplayFunction->(#& ),
           
           InterpretationFunction->(
            "InterpolatingFunction[{{0., 10.}}, <>]"& )],
          False,
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}]], ",", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.25`"}], "-", 
           RowBox[{"x1", "[", "t", "]"}], "+", 
           RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"t", "\[Rule]", "t"}]]}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x2", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.25`"}], "-", 
            RowBox[{"x1", "[", "t", "]"}], "+", 
            RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
         RowBox[{"\[Theta]", "\[Rule]", 
          TagBox[
           TemplateBox[{RowBox[{
               StyleBox[
                TagBox["InterpolatingFunction", "SummaryHead"], 
                "NonInterpretableSummary"], 
               StyleBox["[", "NonInterpretableSummary"], 
               DynamicModuleBox[{Typeset`open$$ = False}, 
                PanelBox[
                 PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj47KURU+yHpPzd0wYnD
3cQ/pwxYbn0s5j/SUFjDa77VP6JqSoOj/9k/IqE47Akn4D9fyGdclkmdP9Wb
k3tZVOU/euocfpZf1r+7wbiC/fHqP1k4rs4RF+W/gEqXStgX8D9b7SjHUwzp
v7tJtw/c7vI/VX8g5NCd5r/ziT6Xnbj1P1fwhVz0/Nu/2iBupGZS+D+BMlZH
UFayv1rNgu1ZJPs/M0y7yjXp1T+J0D+8VMb9P8VJ0ta/euQ/WwqypoYtAEB6
bCAlsOnoPz63Ng34kwFAbJ6i3q825z94j482beICQE34XnENtt8/f/LaffdM
BECc9Cuy7f+7PwX2WabgsAVA2P7BWOxa07/iJK2RzfwGQOFztipAh+O/jN7y
ms9kCED38k/F2Njov43DDGfVtAlADjOWsd6t579bMxlR8CALQN78My8vA+C/
p0NZHGqGDECiwTESwSK/v0t/barn0w1AIcK8dSkL0T+8RXRWej0PQP7mEgim
c+M/wpunYohHEEDSA5j47K/oP+XkrgoD7RBA4EeoQwoJ6D9vc69BiKARQJI7
FAJkBeE/pRcaWg9IEkAwNn+9mzDIP0EBfgGh/RJAvjKX3TQAzr8cu3sZ4q8T
QNviFXtpouK/oorjEiVWFEANcGXiSWHov4+fRJtyChVAjNFYF4Qh6L8oyg8F
wrIVQASzTk/w3eG/AMV038BXFkBT9/szrIHNvz4F00jKChdAHvrKhDTzxz8o
W5uT1bEXQB5JB7QK8+A/ePZcbetmGEAyPNZcfgroP3SniCgDEBlA0kMtDc2h
6D+vKE5UyrUZQHrYIOc8aeM/Ue8MD5xpGkAtvwfxAQ/RP5/LNatvERtA5y0y
7+a3v79T7VfWTccbQNWbALt6P+C/R98Tctt5HEAMrt9/s7Hnv+bmOe9qIB1A
5q/7HTnb6L/rM1n7BNUdQEwTsDo2iuO/nJbi6KB9HkAeUdp5YAXTv4zJBUfs
Ih9AVS/UumDXtT/iQSI0QtYfQB9TbDUERt4/8mdUAc0+IEBN/C/zRtvmP6ZR
FDB+mSBA/wtgeK7/6D96IyEXh/IgQINbjJ/KWeQ/JADj7pBFIUDIs3ZjDtbV
P4F/IQ6gnyFAjkQK5Xxysr+0CRUesPMhQMZCWPA8ONy/mjaFdcVOIkDyw0R9
N8vmv59LQoUyqCJAcE+VPPkH6b96a7SFoPsiQBJpRkkGBOW/CC6jzRNWI0DU
vRHrzvbVv2z7RgaIqiNAKgYhY3Y6pj8yFFD6//8jQNHGkg11DNs/QkjQgA==

                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$73954#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {-0.7827547921982999, 
                    0.7853981633973385}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj47KURU+yHpPzd0wYnD
3cQ/pwxYbn0s5j/SUFjDa77VP6JqSoOj/9k/IqE47Akn4D9fyGdclkmdP9Wb
k3tZVOU/euocfpZf1r+7wbiC/fHqP1k4rs4RF+W/gEqXStgX8D9b7SjHUwzp
v7tJtw/c7vI/VX8g5NCd5r/ziT6Xnbj1P1fwhVz0/Nu/2iBupGZS+D+BMlZH
UFayv1rNgu1ZJPs/M0y7yjXp1T+J0D+8VMb9P8VJ0ta/euQ/WwqypoYtAEB6
bCAlsOnoPz63Ng34kwFAbJ6i3q825z94j482beICQE34XnENtt8/f/LaffdM
BECc9Cuy7f+7PwX2WabgsAVA2P7BWOxa07/iJK2RzfwGQOFztipAh+O/jN7y
ms9kCED38k/F2Njov43DDGfVtAlADjOWsd6t579bMxlR8CALQN78My8vA+C/
p0NZHGqGDECiwTESwSK/v0t/barn0w1AIcK8dSkL0T+8RXRWej0PQP7mEgim
c+M/wpunYohHEEDSA5j47K/oP+XkrgoD7RBA4EeoQwoJ6D9vc69BiKARQJI7
FAJkBeE/pRcaWg9IEkAwNn+9mzDIP0EBfgGh/RJAvjKX3TQAzr8cu3sZ4q8T
QNviFXtpouK/oorjEiVWFEANcGXiSWHov4+fRJtyChVAjNFYF4Qh6L8oyg8F
wrIVQASzTk/w3eG/AMV038BXFkBT9/szrIHNvz4F00jKChdAHvrKhDTzxz8o
W5uT1bEXQB5JB7QK8+A/ePZcbetmGEAyPNZcfgroP3SniCgDEBlA0kMtDc2h
6D+vKE5UyrUZQHrYIOc8aeM/Ue8MD5xpGkAtvwfxAQ/RP5/LNatvERtA5y0y
7+a3v79T7VfWTccbQNWbALt6P+C/R98Tctt5HEAMrt9/s7Hnv+bmOe9qIB1A
5q/7HTnb6L/rM1n7BNUdQEwTsDo2iuO/nJbi6KB9HkAeUdp5YAXTv4zJBUfs
Ih9AVS/UumDXtT/iQSI0QtYfQB9TbDUERt4/8mdUAc0+IEBN/C/zRtvmP6ZR
FDB+mSBA/wtgeK7/6D96IyEXh/IgQINbjJ/KWeQ/JADj7pBFIUDIs3ZjDtbV
P4F/IQ6gnyFAjkQK5Xxysr+0CRUesPMhQMZCWPA8ONy/mjaFdcVOIkDyw0R9
N8vmv59LQoUyqCJAcE+VPPkH6b96a7SFoPsiQBJpRkkGBOW/CC6jzRNWI0DU
vRHrzvbVv2z7RgaIqiNAKgYhY3Y6pj8yFFD6//8jQNHGkg11DNs/QkjQgA==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$73954#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {-0.7827547921982999, 
                    0.7853981633973385}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                  Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                 BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
               StyleBox["]", "NonInterpretableSummary"]}]},
            "CopyTag",
            DisplayFunction->(#& ),
            
            InterpretationFunction->(
             "InterpolatingFunction[{{0., 10.}}, <>]"& )],
           False,
           Editable->False,
           SelectWithContents->True,
           Selectable->False]}]]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.25`"}], "-", 
            RowBox[{"x1", "[", "t", "]"}], "+", 
            RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
         RowBox[{"t", "\[Rule]", "t"}]]}]}], "}"}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.707265780748028*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"feaa842d-dd22-44a6-a1df-7ea748321175"]
}, {2}]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x1", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"4.`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.25`"}], "-", 
       RowBox[{"x1", "[", "t", "]"}], "+", 
       RowBox[{"x2", "[", "t", "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x2", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "4.`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.25`"}], "-", 
       RowBox[{"x1", "[", "t", "]"}], "+", 
       RowBox[{"x2", "[", "t", "]"}]}], ")"}]}]}]}], "}"}]], "Input",
 CellChangeTimes->{3.7072628668511267`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"7c353f97-fa72-4827-9cd7-f47ca6f7deec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving the differential equation ", "Subsubsection",
 CellChangeTimes->{{3.7071682766217747`*^9, 
  3.707168289206608*^9}},ExpressionUUID->"5dbb463f-27f2-4db2-9303-\
9c820307d36b"],

Cell["\<\
Once with the differential equation set up, the next step is to simply solve \
the differential equation. This step can be easily computed using multiple \
math and science software. \
\>", "Text",
 CellChangeTimes->{{3.707165969835548*^9, 3.7071659866753807`*^9}, {
   3.707241459011195*^9, 3.707241519375095*^9}, 
   3.707262849966549*^9},ExpressionUUID->"fa4e6b8c-5eb3-4567-b0c8-\
7362dfb794c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modeling with different parameters ", "Subsubsection",
 CellChangeTimes->{{3.707168294974554*^9, 
  3.7071683077582703`*^9}},ExpressionUUID->"929977bf-4b63-4a4a-b339-\
3919cfa02604"],

Cell["\<\
The first is the function is the shows the motion of the first ball.\
\>", "Text",
 CellChangeTimes->{{3.707166034116816*^9, 3.707166046340262*^9}, {
  3.7072629922488337`*^9, 
  3.70726302575662*^9}},ExpressionUUID->"56c03f41-c917-4b95-af64-\
073323a87ffa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["10"], " ", 
        RowBox[{"t", "/", "2"}]}], "]"}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["14"], " ", 
        RowBox[{"t", "/", "2"}]}], "]"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "40"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707262925276085*^9, 3.707262938464588*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"9c289614-1f41-4b04-aa9e-e26287223ea0"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwUV3c81e8XNyIjkr33nteuyHOinYRQIUlFMqKQJEm+JUWIyF7ZJZIiecyS
vbKyxzUu9yoq2+/+7j+f1/t1znPeZ93znEfC4Yb5VToaGppNRhqa/3+TAhwY
1a/kG3QPblN/FFTXJW58VvwJ4t3ZEyy7RUHbXysfiou/QkT2fpf4FQpijyp9
x9KXjuzSyi/YUigoqSpMjEE8F/HXhN5yG6cgZcqV8G2nQhQcFqPT1kFBQ+zJ
Wxu9xYjttGbqwy8UJJ3FrLO2/gEx/goVCHtNQa4HvN3+iZUhmtYjd8lPKOh9
92jmslEFWpjXY8u/TkFrLsaDv5wwUnhP/+jrUQpKpR188u9wNWIXCGE5LEFB
h1oiZf721qCoG0EqSv/IaCbuaPWycx1i+jZPvvedjJ5d2bRdWq9HJUyOnw3j
yKhr/Vr0oth3JH5U22i/Ehn5fBMlUIoaUVBky+IdygISfNHdtGDUjA59vfrs
8LsF5KAI9CSnNlTZLbWaLLeA6Nb92pb921Gc1BTdgeF51D1qKbJ8uAPxl0w4
P46cR74FrGW/ezuRmX2jyBEyCZ2IIjL+Tu1Cul2cjS2xJCTsW23xy7kbvXi1
+VzegISqjG4vUtZ/oJde82ZBD+bQzp/jcgti/ais2uDhzskZ1Ff1xXt+ph+p
50XJOHrPoLysuFpS0QCalIth+kc/g0xumlycMxpE/jGKeVP80+glc/nLaacR
tK0h8SNIagpxJjbQ/eodR8f3s6Tzfx9F6+yluR76E0jrkvWjSK1RNPkgw3Qx
dQLR2Ff5uemPoFKngGSK8yRyeGzUEd83iKw1tfaT16fQuwAxujOkXpTWmOJJ
EptFGuaVFy7oNKHluA+KI89mkXTTtrHq+QZ0xKlponN1FgUda3i84049mqf/
Z1neNYd6VHRc3jlgtPeAyf4nj+dRXEWRyT6UitoLN+jkqH00dfp95z7JWsyJ
mO3YVBeRZJrxF77teqwnG73/8ZVFFMC+zRfe14DDl3OX/DoW0STlRVrJ/Vas
FfnjqkP+L/S4Mms/R2M3vt+ofEL94hLif8/4hwQjOKfoo2x+zBJaOH2Hsdpg
FHfGGdLLNC+ho3o0op8HRrG007kK/n3LqIbmtus11nHcSB+sSsP1B8WfVEy5
cWoSL8+xs/od/4McNLO7V3omsUjnq+ml+39Qi757ddSFKeyRWpg6Pf8H8T0L
1im6RMS8B35ytn39i2QT7j+rMJrBIO1IObb5F21L1UTOv5/Bzqy/mmo0/6Hr
SgVbueKzuKKf8b/S1H/oCuGmZzRlFhOrIi8Rev+hld2t17PM5vDuHGGDPLYV
VCnnVbr73Rx28NH4l+S3glxz+IY+XiLhZxe+dPEVraDrJ5d7R0pI+MOhY+8i
p1eQaOGok/qOeTys1PWMVXQVjRCEb6efnsdMXHbO/1msokexI/4KsfNYY23m
8HboKhr48Crgy8A8thm7JXmnehXJX+HbYyW4gN8WPvnpqrqGpJfq2H3CFvAc
59yzE5fW0NTQiaisLwtYzueEgXz0GrKDIzpH5hbwlf48CsO3NWT2PtzJlIuM
U/VZ0yZW11BW0iB99V4yHkxxMa9WXkel8VrW0dZkLEDfTJ9ycR09Tzik9M2X
jK0clT/4R60j2/LiXKsXZBz1/Zmjdf06Mv50wQ/yyLhVeYFv78o6KhF/XhL0
hYxZI05951HaQJlsYuNCLWR8bOmN39KFDaT07Mk2Sz8ZB1uxK3dEbCDr1D93
T4+RcVWZ+9Db2g3UPqeyb3aKjDeF28Kf/d1AuUuhT/uIZLw/UA2uK2wiffG2
faKTZOwz8fzXUdtNJGyz7P95iIyLjyymyzzfRMm3SdtFXWRMyTW1oK/ZRPU2
p0bov5KxMlsRw9jyJnq9uZnzvoSMr3ns+Vgpt4U+GFbb1KWQcWaX57VE6y2U
3VHtuO8xGY/pdAr4hW2hxRnmXF4XMhaN12g6W7WF2EzIHvYnydh6M8pfe2kL
2bu43BWSJ+OX9ksqXLLbaE+J15IxLRl31Z4ZWTy3jS446Xiu9SxgDrmSiNan
2+hY6/FVhdwFbBzKbVhQuY28OAbXx24v4JAFr6Unv7ZRQOW3MwpGC9gh53qn
JicN8GukHd7JuoBTWJse7jlMA5LELa6siHlscOCubaAdDdx+xPjgtsk8HnRX
0qbcpgG729VZNMzzmL/zKbE5jwZUn/17cdGLhEvp9bFeHQ2URl9hOy5Dwhba
87F5QzQQYFqfuqdrDkfGGR8P4aCFQCIh1kVmDhMaNyT+KdCC5JhrBlfjLG5d
L1i7akQLonNb/A0us5jlIluBkQ8tmJz8eONx1gx+KNPKvv2TFtpHh340rhGx
5NmAabc/VHuG2Z8NnhBxVYhq1SA7HdzRjZtV4CHiDVK4Z/lBOtBbz7qWJjOF
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
0lq1
         "]]}},
      Annotation[#, "Charting`Private`Tag$71555#1"]& ]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 40}, {-0.9997554677290652, 0.9999999999990004}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7072629220421*^9, 3.707262939489154*^9}},
 CellLabel->
  "Out[103]=",ExpressionUUID->"de214b95-d05b-430c-8a1d-df1ab1161a35"]
}, {2}]],

Cell["\<\
The following  function  shows the motion of the second ball.\
\>", "Text",
 CellChangeTimes->{{3.707263030141512*^9, 
  3.707263063110544*^9}},ExpressionUUID->"2597ae79-f980-49e6-9b1b-\
d12377f7a658"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["10"], " ", 
        RowBox[{"n", "/", "2"}]}], "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["14"], " ", 
        RowBox[{"n", "/", "2"}]}], "]"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "40"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707262978073938*^9, 3.707262980079195*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"d2cf573d-03aa-47c2-9052-1d02c0e67620"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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

         "]]}},
      Annotation[#, "Charting`Private`Tag$72500#1"]& ]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 40}, {-0.9927682063078423, 0.9951259331083618}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.707262974425864*^9, 3.707262980569498*^9}},
 CellLabel->
  "Out[105]=",ExpressionUUID->"c1a18b9c-72c6-4e84-9f72-12bb58d50c4f"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizing the spring system ", "Subsubsection",
 CellChangeTimes->{{3.707168312382922*^9, 
  3.70716833894995*^9}},ExpressionUUID->"6640b138-5479-49a3-8c9a-\
2254f41b4fc8"],

Cell["Displaying the 3D animation ", "Text",
 CellChangeTimes->{{3.70716605087374*^9, 
  3.707166057906176*^9}},ExpressionUUID->"b90e30b3-f5a5-40d2-aa54-\
1764bb03c91b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"scene", "[", 
    RowBox[{
    "h1_", ",", "h2_", ",", "q1_", ",", "q2_", ",", "p1_", ",", "p2_", ",", 
     " ", "size_"}], "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"ContourPlot3D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "h1"}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y", "-", "q1"}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "-", "p1"}], ")"}], "^", "2"}]}], "==", 
        RowBox[{"size", "^", "2"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"h1", "-", 
          RowBox[{"2", "*", "size"}]}], ",", 
         RowBox[{"(", 
          RowBox[{"h1", "+", 
           RowBox[{"2", "*", "size"}]}], ")"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"q1", "-", 
          RowBox[{"2", "*", "size"}]}], ",", 
         RowBox[{"q1", "+", 
          RowBox[{"2", "*", "size"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"p1", "-", 
          RowBox[{"2", "*", "size"}]}], ",", 
         RowBox[{"p1", "+", 
          RowBox[{"2", "*", "size"}]}]}], "}"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"Sphere", " ", "1"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "be", " ", "carefull", " ", "with", " ", "the", " ", "domain", " ", 
        "of", " ", "x"}], ",", " ", 
       RowBox[{"y", " ", "and", " ", 
        RowBox[{"z", "!!"}]}]}], "*)"}], "\n", "\t", 
     RowBox[{"ContourPlot3D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "h2"}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y", "-", "q2"}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "-", "p2"}], ")"}], "^", "2"}]}], "==", 
        RowBox[{"size", "^", "2"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"h2", "-", 
          RowBox[{"2", "*", "size"}]}], ",", 
         RowBox[{"(", 
          RowBox[{"h2", "+", 
           RowBox[{"2", "*", "size"}]}], ")"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"q2", "-", 
          RowBox[{"2", "*", "size"}]}], ",", 
         RowBox[{"q2", "+", 
          RowBox[{"2", "*", "size"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"p2", "-", 
          RowBox[{"2", "*", "size"}]}], ",", 
         RowBox[{"p2", "+", 
          RowBox[{"2", "*", "size"}]}]}], "}"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"Sphere", " ", "2"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "ALLWAYS", " ", "SET", " ", "THE", " ", "POSITION", " ", "OF", " ", 
       "THE", " ", "SPHERES", " ", "IN", " ", "THE", " ", "AXES", " ", "of", 
       " ", "y"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"2", 
            RowBox[{"u", "/", 
             RowBox[{"Abs", "[", "q1", "]"}]}]}], "]"}], "*", "size"}], ",", 
         RowBox[{"u", "/", "10"}], ",", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", 
            RowBox[{"u", "/", 
             RowBox[{"Abs", "[", "q1", "]"}]}]}], "]"}], "*", "size"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", 
         RowBox[{"q2", "*", "10"}], ",", 
         RowBox[{"q1", "*", "10"}]}], "}"}], ",", 
       RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"Spring", " ", "inbetwene"}], "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"PlotRange", "\[Rule]", "3"}], ",", 
     RowBox[{"Background", "\[Rule]", "White"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], 
    RowBox[{"(*", 
     RowBox[{"Note", ":", 
      RowBox[{
      "set", " ", "the", " ", "plot", " ", "change", " ", "as", " ", 
       "variable"}]}], "*)"}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"scene", "[", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["10"], " ", "t"}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["14"], " ", "t"}], "]"}]}], ")"}]}], "-", "1"}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["10"], " ", "t"}], "]"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["14"], " ", "t"}], "]"}]}], ")"}]}], "+", "1"}], ",", "0", 
     ",", "0", ",", "0.5"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.707169100773129*^9, 3.70716911125307*^9}, {
   3.7071724590063667`*^9, 3.7071724722444057`*^9}, {3.707172650506065*^9, 
   3.7071726690526743`*^9}, {3.7072136429714746`*^9, 
   3.7072136492936277`*^9}, {3.7072625121123*^9, 3.707262546180722*^9}, 
   3.707262597420836*^9, {3.707262650056574*^9, 3.707262766844528*^9}, {
   3.707262811373622*^9, 3.707262826854838*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"b4b86fb2-2038-41a0-a8bf-07e9df8d2c42"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 14.571611404418945`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 20}}, Typeset`size$$ = {360., {192., 197.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$73989$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$73989$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`scene[
       0, 0, (1/2) (Cos[Sqrt[10] $CellContext`t$$] - Cos[
          Sqrt[14] $CellContext`t$$]) - 
        1, (1/2) (Cos[Sqrt[10] $CellContext`t$$] + 
          Cos[Sqrt[14] $CellContext`t$$]) + 1, 0, 0, 0.5], 
      "Specifications" :> {{$CellContext`t$$, 0, 20, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {229., 235.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.707262685487862*^9, 3.707262767785058*^9}, {
   3.707262813035577*^9, 3.7072628276368637`*^9}, 3.7072657808514214`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"4f6b8ad1-1bef-47ae-b41a-57ee200da423"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulating two pendulums connected by a spring ", "Section",
 CellChangeTimes->{{3.7071667791677628`*^9, 3.707166781764138*^9}, {
  3.70716688873083*^9, 3.707166906437312*^9}, {3.7071670166417713`*^9, 
  3.7071670221628838`*^9}, {3.707261673152934*^9, 
  3.707261674414886*^9}},ExpressionUUID->"e631c51b-79fe-4112-b918-\
da4b39440240"],

Cell[CellGroupData[{

Cell["\<\
Modeling with Lagrangian method three entangled pendulums in 3 dimensions\
\>", "Subsubsection",
 CellChangeTimes->{{3.7071686169676037`*^9, 3.7071686860513268`*^9}, 
   3.70725960401969*^9},ExpressionUUID->"4474f08b-0fc6-4ce3-8132-\
e9a808b26e43"],

Cell[TextData[{
 "Sometime using the Newton can be too complicated of tedious, another method \
to try to use is the Lagrangian method which consist in calculating the \
Lagrangian which is L= T-V, the difference between the kinetic energy and \
potential energy. After the Lagrangian is calculated the Euler-Lagrangian \
differential equation is solve ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
EEIIIYQQQgghhBBCCCGEEEJIKP4L5dGm/w==
     "], {{0, 154}, {400, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{180.5234375, Automatic},
   ImageSizeRaw->{400, 154},
   PlotRange->{{0, 400}, {0, 154}}]], "Input",ExpressionUUID->
  "fb534a7e-85ff-4630-a7ad-527c84a2d1ca"],
 ". This process outputs a system of differential equations:x1\
\[CloseCurlyQuote]\[CloseCurlyQuote][t]\[Equal]"
}], "Text",
 CellChangeTimes->{{3.70716702915618*^9, 3.707167034668195*^9}, 
   3.707259609333621*^9, {3.707260874978217*^9, 3.70726093567767*^9}, {
   3.707260973420539*^9, 3.707261067266512*^9}, {3.707261124358849*^9, 
   3.707261173853552*^9}, {3.707261204190063*^9, 3.707261248267784*^9}, 
   3.707261342012801*^9},ExpressionUUID->"12c5c678-843e-4882-bd62-\
c04524ffc899"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "=", "10"}], ";", 
   RowBox[{"l", "=", "1"}], ";", 
   RowBox[{"k", "=", "2"}], ";", 
   RowBox[{"m", "=", "1"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "random", " ", "parameters", " ", "to", " ", "solve", " ", 
    "the", " ", "equation"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.707241595344404*^9, 3.707241647410804*^9}, {
  3.707261253947126*^9, 3.707261267065864*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"4c4ac35e-8b79-4d2d-8a9c-518c2956e98f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"system", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x1", "''"}], "[", "t", "]"}], "\[Equal]", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "g"}], "/", "l"}], "*", 
       RowBox[{"x1", "[", "t", "]"}]}], "+", " ", 
      RowBox[{
       RowBox[{"k", "/", "m"}], " ", "*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x2", "[", "t", "]"}], "-", 
         RowBox[{"x1", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x2", "''"}], "[", "t", "]"}], "\[Equal]", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "g"}], "/", "l"}], "*", 
       RowBox[{"x2", "[", "t", "]"}]}], "-", " ", 
      RowBox[{
       RowBox[{"k", "/", "m"}], " ", "*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x2", "[", "t", "]"}], "-", 
         RowBox[{"x1", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"x1", "[", "0", "]"}], "\[Equal]", " ", "1"}], ",", 
    RowBox[{
     RowBox[{"x2", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x1", "'"}], "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x2", "'"}], "[", "0", "]"}], "\[Equal]", " ", "0"}]}], 
   "}"}]}]], "Code",
 CellChangeTimes->{3.7071709717719812`*^9, 3.707261683762966*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"c5270ae7-4613-48f8-9a85-3f3d6933ef68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x1", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "10"}], " ", 
      RowBox[{"x1", "[", "t", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"x1", "[", "t", "]"}]}], "+", 
        RowBox[{"x2", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x2", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "10"}], " ", 
      RowBox[{"x2", "[", "t", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"x1", "[", "t", "]"}]}], "+", 
        RowBox[{"x2", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"x1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"x2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x1", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x2", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.70717090143106*^9, 3.707170973640679*^9, 3.7071721810733*^9, 
   3.707186530281509*^9, 3.707213093542571*^9, 3.7072141945185957`*^9, 
   3.707217842707301*^9, 3.707239704430986*^9, 3.7072403452142477`*^9, 
   3.7072415771044703`*^9, {3.7072416200771646`*^9, 3.707241651104837*^9}, 
   3.707258854648567*^9, 3.707260024258524*^9, {3.7072612305632973`*^9, 
   3.70726123486276*^9}, 3.707261603933242*^9, 3.707261685604064*^9, 
   3.7072657810403223`*^9, 3.707265932683998*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"36a53806-34cc-4528-8daf-259702291e8b"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving the differential equations system ", "Subsubsection",
 CellChangeTimes->{{3.70716883274993*^9, 
  3.7071688485995407`*^9}},ExpressionUUID->"aeb085bb-2ac4-4f9b-98aa-\
dad13e5e54ef"],

Cell["\<\
With the equation set up, the system is solved using Dsolve command.\
\>", "Text",
 CellChangeTimes->{{3.7071670387400513`*^9, 3.70716705777976*^9}, {
   3.707261282793213*^9, 3.7072613075365*^9}, 
   3.707262624337278*^9},ExpressionUUID->"43c43971-0b14-472a-8f51-\
b0bb5fec6b40"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"system", ",", 
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2"}], "}"}], ",", "t"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.707169966867421*^9, 3.707169969784894*^9}, {
  3.707170917356102*^9, 3.70717092455486*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"1bf85ad5-08ea-4512-9f9f-9d6aab18afe6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x1", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["10"], " ", "t"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["14"], " ", "t"}], "]"}]}], ")"}]}]}], "]"}]}], ",", 
    RowBox[{"x2", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["10"], " ", "t"}], "]"}], "-", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["14"], " ", "t"}], "]"}]}], ")"}]}]}], "]"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.707260024499133*^9, 3.707261269725029*^9, 
  3.707261604216733*^9, 3.707261694000217*^9, 3.707265781335091*^9, 
  3.707265939207642*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"1c414c53-398a-4bdf-8f5c-89cfa73d758b"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modeling with different parameters ", "Subsubsection",
 CellChangeTimes->{{3.707168877222064*^9, 
  3.70716888555035*^9}},ExpressionUUID->"fcb107fc-df12-4432-83f8-\
b4f289ba33a0"],

Cell["\<\

The following example is the function of pendulum one.\
\>", "Text",
 CellChangeTimes->{{3.707167061198161*^9, 3.707167084916975*^9}, {
  3.707260692055698*^9, 3.707260706507292*^9}, {3.7072613239144077`*^9, 
  3.7072613263118668`*^9}},ExpressionUUID->"da18ef78-5904-473c-b6ea-\
975866d5004d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["10"], " ", "t"}], "]"}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["14"], " ", "t"}], "]"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "40"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{
  3.7071710313082952`*^9, {3.70724175258673*^9, 3.707241752879389*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"d554d6c5-e1c9-4824-ad6c-3148db9418a0"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]}},
      Annotation[#, "Charting`Private`Tag$74276#1"]& ]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 40}, {-0.9995399895955164, 0.9999999999960016}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.707171032271831*^9, 3.7071721823299522`*^9, 
  3.707186530933743*^9, 3.7072130941893578`*^9, 3.707214195065363*^9, 
  3.707217843357122*^9, 3.70723970514957*^9, 3.7072403456015368`*^9, 
  3.707241753557522*^9, 3.707258855025085*^9, 3.707260024719974*^9, 
  3.7072616045080357`*^9, 3.707265781521779*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"fe6c3103-a765-45fc-91d1-a338f99808e9"]
}, {2}]],

Cell["The graph on top ", "Direction",
 CellChangeTimes->{{3.707261755997974*^9, 
  3.7072617678917522`*^9}},ExpressionUUID->"f517f9e4-aeb5-4c64-9397-\
a8a0b97de180"],

Cell["The following example is the function of pendulum two.", "Text",
 CellChangeTimes->{{3.707260720253582*^9, 
  3.707260724123475*^9}},ExpressionUUID->"133b6288-8201-498e-be0c-\
1315fae61b02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["10"], " ", "n"}], "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["14"], " ", "n"}], "]"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "40"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.707241677571115*^9, 3.707241735744103*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"ba3140f7-87d3-4133-809b-1d235d9b48f3"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
LpOL0VxgrEHzKcB9Ed/suDFE854LJJ0LI8N3FnH49tdbeXlcMPVmiPGc8xIu
FWdcvVrOBZ6qCZu+7Ut4Rt/Cm+UnFySopoePS5Ew991PdMX9XBDI1+F00paE
UQxF+K1ZLoifO/zZL5qE7fE5IZ4/5PN3qMQ8Ckg4aupdahUNNxRIuOznrCbh
CpY/hLuc3JB3+6mcbjkJLxzQLxYW5Qan2D42xgwS5rOIO96oxA0+B6arHP1J
WNdvsdnjMDck70b+emxIwo7p6JKMPjcsW8kxWVOTcGxr2ESHKTecP/3gMPHj
Eq7ZGHd8bMMNFAOx50S0lvCyiPqmigs3pA63ZdpULmKhk4F+gw+5wUNThltX
fRGfdOxjeR7CDZmz5m9oYxewS6RijEYcN9BQBntQLM3jhBIf8ak0bjhIE94a
qjqPf4y3ZL4q4AZNZZ5AoVtzeI1R4qB2NTeEGabScpLfVwPz7wZvhsl20lW+
fZ/J75svf5f+IjeEPudtO5g7hZM/3Lb6s8UNPJZf6WuTJ/HGbzbXczx74YyV
T1W09TiW2Ge9uyuxFwKsZ835Vcew0bH8Z1nEvcAeZT347M8Ifh9ulkB/ei+Y
+aomzjUN4HMqSd/L/PbCqCP7L5eeVpx1S1VA4ddecOcsN3rPUoB6Xvq/6/m3
FzjsjGi2x8sRzdcu5afMPGBm4bY38WstukT7QHdUhgfqSFGyxQKtiD656k60
JQ8IvTNeduMfQPt/7P1z7A4P6ARls5Z9GUKWy7aPVjx4IDWiItk1cQR90WKO
Oh3JA3TP1a8T2cbRyA1L0e1kHrAI6ur8pz6BmENy0tNyeIAhrygv9Pwksu43
wdSNPMBvOaMWdWsaMcaNOtzt5YGhgaOnH12eQXmXHIWGp3iAdLmq2lZ7Fl0S
2K43XOOBZV6B9y38c4i6L8CjiJIXYjUDr5yamEOZr7llZdl4QXL6KOXtxHlk
Yp7UFSnEC5eSz/i2nF5AO3zKT6jlyTjxxIDowgJ611O0/+5BXlhhkDdjfLCI
DGNOjg0d4wWTiakU3a1FtHaxI9TwHC8wL/yjCrZbQm94r6Giq7zw95adY0bd
Ejrevbgo48ALx8pf5brwktBSlOebSE9esDnv8rj4AglFmdIZUAfygj9rZMQt
PxLS4onYdI7kBY0RtQ83EkloqlM0bSiZF77t13zxIZOEXkRmmRrm8MLaLQl1
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

         "]]}},
      Annotation[#, "Charting`Private`Tag$74317#1"]& ]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 40}, {-0.9969683170991761, 0.9984977683110596}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.707241736485037*^9, 3.7072588551628027`*^9, 
  3.707260024858664*^9, 3.7072616050219383`*^9, 3.707265781661186*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"257f2d5e-67fc-4866-b926-b44469ca2fd0"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizing the pendulum system ", "Subsubsection",
 CellChangeTimes->{{3.707168887565093*^9, 
  3.707168909870018*^9}},ExpressionUUID->"fdeb7566-c5bc-4089-ba15-\
92fa37bbf697"],

Cell["Displaying the 3D animation ", "Text",
 CellChangeTimes->{{3.7071670880844803`*^9, 
  3.707167095124239*^9}},ExpressionUUID->"79881bf5-43b1-4cae-8c04-\
8a4cb5c3e03c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"scene3", "[", 
     RowBox[{
     "\[Theta]1_", ",", "\[Theta]2_", ",", "l_", ",", "size_", ",", "m_"}], 
     "]"}], ":=", 
    RowBox[{"Show", "[", "\n", "\t", 
     RowBox[{"(*", "Pendulum1", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"ContourPlot3D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"l", "*", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}], ")"}], "^", "2"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y", "-", 
             RowBox[{"l", "*", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], "^", "2"}], 
          "+", 
          RowBox[{
           RowBox[{"(", "z", ")"}], "^", "2"}]}], "==", 
         RowBox[{"size", "^", "2"}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"Sphere", " ", "1"}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{"Equation", " ", "of", " ", "the", " ", "surface"}], "*)"}], 
        "\n", "\t", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"l", "*", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
           RowBox[{"2", "*", "size"}]}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"l", "*", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
            RowBox[{"2", "*", "size"}]}], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{
           RowBox[{"l", "*", 
            RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
           RowBox[{"2", "*", "size"}]}], ",", 
          RowBox[{
           RowBox[{"l", "*", 
            RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
           RowBox[{"2", "*", "size"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "size"}], ",", 
          RowBox[{"2", "*", "size"}]}], "}"}], ",", 
        RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Boudaries", " ", "for", " ", "the", " ", "surface"}], "*)"}], 
      "\n", "\t", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"l", "*", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], ",", 
            RowBox[{"l", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], ",", "0"}], "}"}]}], 
         "}"}], "]"}], "]"}], ",", 
      RowBox[{"(*", "Rod1", "*)"}], "\n", "\t", 
      RowBox[{"(*", "Pendulum12", "*)"}], "\n", "\t", 
      RowBox[{"ContourPlot3D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"l", "*", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}]}], ")"}], "^", "2"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y", "-", 
             RowBox[{"l", "*", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", "m"}], ")"}], 
           "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", "z", ")"}], "^", "2"}]}], "==", 
         RowBox[{"size", "^", "2"}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"Sphere", " ", "2"}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{"Equation", " ", "of", " ", "the", " ", "surface"}], "*)"}], 
        "\n", "\t", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"l", "*", 
            RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
           RowBox[{"2", "*", "size"}]}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"l", "*", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"2", "*", "size"}]}], ")"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"m", "+", 
           RowBox[{"l", "*", 
            RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
           RowBox[{"2", "*", "size"}]}], ",", 
          RowBox[{"m", "+", 
           RowBox[{"l", "*", 
            RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
           RowBox[{"2", "*", "size"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "size"}], ",", 
          RowBox[{"2", "*", "size"}]}], "}"}], ",", 
        RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Boudaries", " ", "for", " ", "the", " ", "surface"}], "*)"}], 
      "\n", "\t", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"l", "*", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], ",", 
            RowBox[{"l", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"l", "*", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], ",", 
            RowBox[{"m", "+", 
             RowBox[{"l", "*", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]}], ",", "0"}], "}"}]}],
          "}"}], "]"}], "]"}], ",", 
      RowBox[{"(*", "Rod2", "*)"}], "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"Spring", " ", "inbetwene"}], "*)"}], "\n", "\t", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "m", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"l", "*", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], ",", 
            RowBox[{"m", "+", 
             RowBox[{"l", "*", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]}], ",", "0"}], "}"}]}],
          "}"}], "]"}], "]"}], ",", "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Background", "\[Rule]", "White"}], ",", 
      RowBox[{"Boxed", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0", ",", 
         RowBox[{"-", "2"}]}], "}"}]}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"scene3", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["5"], " ", 
            RowBox[{"t", "/", "5"}]}], "]"}], "-", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["7"], " ", 
            RowBox[{"t", "/", "5"}]}], "]"}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["5"], " ", 
            RowBox[{"t", "/", "5"}]}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["7"], " ", 
            RowBox[{"t", "/", "5"}]}], "]"}]}], ")"}]}], ",", "2", ",", "0.5",
        ",", "3"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "40"}], "}"}]}], "]"}], 
   RowBox[{"(*", 
    RowBox[{
    "scene3", " ", "is", " ", "a", " ", "function", " ", "that", " ", 
     "inputs", " ", "a", " ", "position", " ", "function", " ", "and", " ", 
     "outputs", " ", "the", " ", "objects", " ", "in", " ", "some", " ", 
     "order"}], "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.707169342625824*^9, 3.707169349657074*^9}, {
  3.707169560726261*^9, 3.707169561712656*^9}, {3.707169843873644*^9, 
  3.707169923107658*^9}, {3.7071699772211113`*^9, 3.707170023580243*^9}, {
  3.7071700554915667`*^9, 3.707170075202408*^9}, {3.707170310564596*^9, 
  3.707170314380475*^9}, {3.707172198245284*^9, 3.70717229189347*^9}, {
  3.707172354848379*^9, 3.707172388912253*^9}, {3.707261820433313*^9, 
  3.7072619483535147`*^9}, {3.7072619962597637`*^9, 3.707262002105565*^9}, {
  3.7072620388036737`*^9, 3.707262039265888*^9}, {3.707262084705537*^9, 
  3.7072620979734583`*^9}, {3.707262233046023*^9, 3.7072624046694527`*^9}, {
  3.707262454545912*^9, 3.7072624739970837`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"0f01ef48-f4f8-4a7e-a511-eefbb0d3696d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 27.50769805908203, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 40}}, Typeset`size$$ = {360., {178., 183.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$74345$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$74345$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`scene3[(1/2) (Cos[Sqrt[5] ($CellContext`t$$/5)] - 
         Cos[Sqrt[7] ($CellContext`t$$/5)]), (1/2) (
         Cos[Sqrt[5] ($CellContext`t$$/5)] + 
         Cos[Sqrt[7] ($CellContext`t$$/5)]), 2, 0.5, 3], 
      "Specifications" :> {{$CellContext`t$$, 0, 40, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {215., 221.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7071695629366837`*^9, 3.70716975298872*^9, {3.707169855353383*^9, 
   3.707169869063595*^9}, {3.7071721823786697`*^9, 3.707172292348761*^9}, {
   3.707172356094393*^9, 3.7071723900402517`*^9}, 3.707186531029171*^9, 
   3.707213094243375*^9, 3.707214195105523*^9, 3.7072178433949547`*^9, 
   3.707239705300207*^9, 3.707240345684074*^9, 3.707258855210812*^9, 
   3.707260024896141*^9, 3.70726160570822*^9, 3.707261949595675*^9, 
   3.707262002687639*^9, 3.707262040202176*^9, 3.707262109570425*^9, 
   3.70726217665777*^9, {3.707262235042432*^9, 3.707262353149478*^9}, {
   3.707262439768858*^9, 3.707262474485323*^9}, 3.707265781714096*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"c008a244-9c7d-4319-91e7-72879fb98a82"]
}, {2}]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.707169873082926*^9},ExpressionUUID->"9547e9b8-5bcc-41b6-b2af-\
96c3841710ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further Explorations", "FurtherExplorationSection",
 CellChangeTimes->{{3.70077612322993*^9, 3.7007761320921593`*^9}, {
  3.7007787731699142`*^9, 
  3.70077877480995*^9}},ExpressionUUID->"ab762da0-f7d4-4528-8652-\
f88d0966a360"],

Cell["Name of a related topic for exploration", "FurtherExploration",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
  3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
  3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, {
  3.705686193025524*^9, 
  3.7056861967297907`*^9}},ExpressionUUID->"2006652c-6498-405f-863b-\
1422d5e76056"],

Cell["\<\
Name of another related topics for exploration (repeat as needed)\
\>", "FurtherExploration",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
  3.705104213701561*^9, 3.7051042224510612`*^9}, {3.705105582902875*^9, 
  3.7051055862950687`*^9}, {3.705686185124048*^9, 
  3.705686188552953*^9}},ExpressionUUID->"07f82b1f-3f5a-40fb-8e22-\
a694de259e7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Authorship information", "AuthorshipSection",
 CellChangeTimes->{{3.705105762145127*^9, 
  3.7051057665253773`*^9}},ExpressionUUID->"cc6aa65a-4573-4d24-b7cb-\
7b62c7d1e917"],

Cell["Emilio Andres Vazquez", "Authorship",
 CellChangeTimes->{{3.7051057700535793`*^9, 3.7051057808261957`*^9}, {
  3.7072402797780046`*^9, 
  3.707240295640615*^9}},ExpressionUUID->"72f8c570-1507-4317-aa49-\
aba3fffabb87"],

Cell["23 June 2017", "Authorship",
 CellChangeTimes->{{3.705105786521521*^9, 3.7051057998362827`*^9}, {
  3.707240299833905*^9, 
  3.707240308458197*^9}},ExpressionUUID->"60790ca0-4e5a-4487-b347-\
e9c9b9e5638c"],

Cell["emibars97@gmai.com", "Authorship",
 CellChangeTimes->{{3.7051058070526953`*^9, 3.705105841815684*^9}, {
  3.707259501904331*^9, 
  3.707259512860955*^9}},ExpressionUUID->"eec1d702-e7a4-4f2a-b562-\
ca83002bb249"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->Automatic,
DockedCells->Cell[
  BoxData[
   TagBox[
    GridBox[{{
       ItemBox["\"\"", ItemSize -> 0.2, StripOnInput -> False], 
       DynamicModuleBox[{}, 
        ActionMenuBox[
        "\"Insert\"", {
         "\"Section\"" :> 
          Module[{$CellContext`nb = ButtonNotebook[]}, 
            Exploration`MoveCursorAfterCellPosition[$CellContext`nb]; 
            NotebookWrite[$CellContext`nb, 
              Cell[
               CellGroupData[{
                 Cell["XXXX", "Section"], 
                 Cell["XXXX", "Text"], 
                 Cell["XXXX", "Direction"], 
                 Cell[
                  BoxData["XXXX"], "Input"]}, Open]], All]; 
            SelectionMove[$CellContext`nb, Before, Cell]; 
            SelectionMove[$CellContext`nb, Next, Cell]; 
            SelectionMove[$CellContext`nb, All, CellContents]], Delimiter, 
          "\"Text\"" :> 
          Module[{$CellContext`nb = ButtonNotebook[]}, 
            Exploration`MoveCursorAfterCellPosition[$CellContext`nb]; 
            NotebookWrite[$CellContext`nb, 
              Cell["XXXX", "Text"], All]; 
            SelectionMove[$CellContext`nb, All, CellContents]], 
          "\"Direction\"" :> 
          Module[{$CellContext`nb = ButtonNotebook[]}, 
            Exploration`MoveCursorAfterCellPosition[$CellContext`nb]; 
            NotebookWrite[$CellContext`nb, 
              Cell["XXXX", "Direction"], All]; 
            SelectionMove[$CellContext`nb, All, CellContents]], 
          "\"Further Exploration\"" :> 
          Module[{$CellContext`nb = ButtonNotebook[]}, 
            Exploration`MoveCursorAfterCellPosition[$CellContext`nb]; 
            NotebookWrite[$CellContext`nb, 
              Cell["XXXX", "FurtherExploration"], All]; 
            SelectionMove[$CellContext`nb, All, CellContents]]}, Method -> 
         "Queued", Appearance -> "PopupMenu", FrameMargins -> 2.4], 
        Initialization :> (Exploration`MoveCursorAfterCellPosition[
           Pattern[$CellContext`nb, 
            Blank[]]] := Which[
           MatchQ[
            Developer`CellInformation[$CellContext`nb], {
             Repeated[{
               BlankSequence[], "CursorPosition" -> "CellBracket", 
               BlankSequence[]}]}], 
           SelectionMove[$CellContext`nb, After, Cell], 
           Developer`CellInformation[$CellContext`nb] =!= $Failed, 
           Module[{$CellContext`lnkre}, 
             While[(LinkWrite[$ParentLink, 
                 
                 FrontEnd`CellInformation[$CellContext`nb]]; \
$CellContext`lnkre = LinkRead[$ParentLink]); 
              And[$CellContext`lnkre =!= $Failed, 
                Not[
                 MemberQ[
                  ReplaceAll["CursorPosition", $CellContext`lnkre], 
                  "CellBracket"]]], 
              FrontEndExecute[
               
               FrontEnd`SelectionMove[$CellContext`nb, All, Cell, AutoScroll -> 
                False]]]]; SelectionMove[$CellContext`nb, After, Cell]]), 
        DynamicModuleValues :> {}], 
       ItemBox["\"\"", ItemSize -> Fit, StripOnInput -> False], 
       ButtonBox["\"Sample\"", ButtonFunction :> NotebookOpen[
          
          FileNameJoin[{$UserBaseDirectory, "Applications", 
            "SummerSchoolTemplates", "FrontEnd", "TextResources", 
            "TopicExplorationExample.nb"}]], Appearance -> Automatic, 
        Evaluator -> Automatic, Method -> "Queued"]}}, AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
  "DockedCell"],
CellLabelAutoDelete->False,
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], FontFamily -> "Source Sans Pro", FontTracking -> -0.8,
     FontColor -> RGBColor[0.65, 0, 0]], 
   Cell[
    StyleData["Abstract", StyleDefinitions -> StyleData["Text"]], FontSize -> 
    16, FontSlant -> "Italic", FontColor -> GrayLevel[0.4]], 
   Cell[
    StyleData["Section"], CellFrame -> False, FontFamily -> "Source Sans Pro",
     FontTracking -> -0.5, $CellContext`ReturnCreatesNewCell -> 
    True, $CellContext`DefaultReturnCreatedCellStyle -> "Text"], 
   Cell[
    StyleData["FurtherExplorationSection"], 
    CellMargins -> {{28, Inherited}, {6, 24}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, DefaultNewCellStyle -> 
    "FurtherExploration", FontFamily -> "Source Sans Pro Semibold", FontSize -> 
    22, FontColor -> GrayLevel[0.35]], 
   Cell[
    StyleData["FurtherExploration", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{66, 10}, {5, 5}}, FontSize -> 14, FontWeight -> "Bold", 
    FontColor -> GrayLevel[0.5], $CellContext`ReturnCreatesNewCell -> True], 
   Cell[
    StyleData["AuthorshipSection"], CellMargins -> {{28, Inherited}, {6, 24}},
     CellGroupingRules -> {"SectionGrouping", 30}, DefaultNewCellStyle -> 
    "FurtherExploration", FontFamily -> "Source Sans Pro Semibold", FontSize -> 
    22, FontColor -> GrayLevel[0.35]], 
   Cell[
    StyleData["Authorship", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{66, 10}, {4, 4}}, FontSize -> 14, FontColor -> 
    GrayLevel[0.5], $CellContext`ReturnCreatesNewCell -> True], 
   Cell[
    StyleData["Text"], DefaultNewCellStyle -> 
    "Direction", $CellContext`ReturnCreatesNewCell -> 
    True, $CellContext`DefaultReturnCreatedCellStyle -> "Direction"], 
   Cell[
    StyleData["Direction", StyleDefinitions -> StyleData["Text"]], 
    CellDingbat -> 
    StyleBox["\[FilledSmallSquare]", FontColor -> GrayLevel[0.7]], 
    CellMargins -> {{78, 10}, {6, 7}}, CellFrameLabelMargins -> 4, 
    MenuSortingValue -> 10000, MenuCommandKey -> "8", FontSize -> 14, 
    FontWeight -> "Plain", FontColor -> 
    GrayLevel[0.4], $CellContext`DefaultReturnCreatedCellStyle -> "Input"], 
   Cell[
    StyleData["Code"], MenuCommandKey -> None]}, Visible -> False, 
  FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, 2017)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 316, 5, 97, "Title", "ExpressionUUID" -> \
"86c51ef5-ceca-424f-9d3c-79e056bbec5e"],
Cell[899, 29, 377, 7, 33, "Abstract", "ExpressionUUID" -> \
"97fb1062-c0f9-4bb8-9a27-b8b02c847e9f"],
Cell[CellGroupData[{
Cell[1301, 40, 164, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"28e620eb-9331-4161-857f-7f8c6387bb63"],
Cell[1468, 45, 779, 13, 49, "Text", "ExpressionUUID" -> \
"8f6b332e-5806-4584-bb7a-a3d5a4de7c7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2284, 63, 341, 5, 62, "Section", "ExpressionUUID" -> \
"ad5ebe71-b89a-4885-96e3-0e4ba903090a"],
Cell[2628, 70, 336, 7, 30, "Text", "ExpressionUUID" -> \
"1ec3561a-67f9-461d-ac03-64608ce1d8ec"],
Cell[CellGroupData[{
Cell[2989, 81, 256, 4, 35, "Subsubsection", "ExpressionUUID" -> \
"4c782f69-834e-4470-b13f-c154086f0a5c"],
Cell[3248, 87, 2126, 31, 163, "Text", "ExpressionUUID" -> \
"b6486709-a8d4-4c0e-959e-a0a7122dcba3"],
Cell[CellGroupData[{
Cell[5399, 122, 1116, 30, 72, "Code", "ExpressionUUID" -> \
"8bc90c84-3e23-4a20-ba5d-d617f2a3c80d"],
Cell[6518, 154, 1962, 40, 335, "Output", "ExpressionUUID" -> \
"e24c705a-eeb0-4e60-aeb9-984e5144d7c2"]
}, {2}]],
Cell[8492, 197, 505, 9, 31, "Direction", "ExpressionUUID" -> \
"ea2391ae-57ef-4a16-a69e-1c9ebb38bf09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9034, 211, 572, 9, 35, "Subsubsection", "ExpressionUUID" -> \
"d890ae57-72b0-4fac-ab73-b68c673ad46e"],
Cell[9609, 222, 671, 11, 49, "Text", "ExpressionUUID" -> \
"000ebc11-9b7a-4185-a407-1396bad361b4"],
Cell[10283, 235, 1061, 17, 49, "Text", "ExpressionUUID" -> \
"eec92303-e8e5-4399-8604-3050c0efb912"],
Cell[11347, 254, 481, 9, 48, "Direction", "ExpressionUUID" -> \
"8cbb6830-3ce7-4262-bc08-463a1be1ae9c"],
Cell[CellGroupData[{
Cell[11853, 267, 32514, 572, 108, "WolframAlphaShortInput", "ExpressionUUID" \
-> "8731479e-1a49-46ad-b932-f175b4353d74"],
Cell[44370, 841, 17150, 287, 273, "Output", "ExpressionUUID" -> \
"63c59747-08e9-4f0f-b6b7-e26ca17e8ba2"]
}, {2}]],
Cell[CellGroupData[{
Cell[61554, 1133, 921, 25, 91, "Code", "ExpressionUUID" -> \
"4ed4d70e-944e-4f74-a4e0-731f0a1b2423"],
Cell[62478, 1160, 2087, 41, 343, "Output", "ExpressionUUID" -> \
"05bcb1f7-b266-445a-8cff-600530ea7c42"]
}, {2}]],
Cell[64577, 1204, 345, 7, 31, "Direction", "ExpressionUUID" -> \
"f9603e7d-e68b-4213-8f02-8651dfec9004"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64959, 1216, 231, 4, 35, "Subsubsection", "ExpressionUUID" -> \
"8da1478b-f0d0-48db-be84-cb9c42348005"],
Cell[65193, 1222, 610, 11, 30, "Text", "ExpressionUUID" -> \
"80977f3c-1f52-49fe-92ce-db961da88f26"],
Cell[65806, 1235, 423, 8, 30, "Text", "ExpressionUUID" -> \
"1f820172-8b0b-4fa4-bd97-b1d50077aa98"],
Cell[66232, 1245, 428, 8, 30, "Text", "ExpressionUUID" -> \
"b6c084d8-0e29-49e6-ab7a-72dec3671a3d"],
Cell[CellGroupData[{
Cell[66685, 1257, 1425, 39, 52, "Code", "ExpressionUUID" -> \
"d636bd58-3924-4979-832d-145a2e065650"],
Cell[68113, 1298, 2626, 50, 363, "Output", "ExpressionUUID" -> \
"b7551db4-b9d3-42b0-aaa8-f933e3d18847"]
}, {2}]],
Cell[70751, 1351, 512, 10, 48, "Direction", "ExpressionUUID" -> \
"4bae7a0b-dc20-4570-94a3-bdc09bea6a34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71300, 1366, 265, 5, 35, "Subsubsection", "ExpressionUUID" -> \
"1ff8c917-3ebd-4aad-a5a2-ace1645d1923"],
Cell[71568, 1373, 1089, 17, 49, "Text", "ExpressionUUID" -> \
"281a65ad-d577-422d-bb55-ddb3accd6332"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72694, 1395, 186, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"ecbb6754-67d0-4b9b-988b-7bc674862158"],
Cell[72883, 1400, 504, 10, 30, "Text", "ExpressionUUID" -> \
"8203df7a-afbf-4dd6-8655-d15f89d2b00a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73424, 1415, 186, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"dd20b062-483e-4b7c-a7f9-282d53d44199"],
Cell[73613, 1420, 660, 11, 49, "Text", "ExpressionUUID" -> \
"d27e6624-ad91-4935-9d35-b51bc301e896"],
Cell[74276, 1433, 154, 3, 32, "Input", "ExpressionUUID" -> \
"4eec8a8b-893d-418d-bce1-8caaa0e29168"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74479, 1442, 174, 3, 62, "Section", "ExpressionUUID" -> \
"c6447f84-9d03-45e4-9cd0-232b9327028a"],
Cell[74656, 1447, 266, 6, 30, "Text", "ExpressionUUID" -> \
"8dccfe37-340e-40ce-88de-decdbed9ab9a"],
Cell[CellGroupData[{
Cell[74947, 1457, 196, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"85b09c20-e9ce-42e2-b51f-c40574dd5b91"],
Cell[75146, 1462, 1075, 19, 106, "Text", "ExpressionUUID" -> \
"25cd4919-f640-42e7-b7f9-7b0b21046aaf"],
Cell[76224, 1483, 273, 6, 31, "Direction", "ExpressionUUID" -> \
"cdc4e119-19d8-484b-9a63-5f556ed81bf3"],
Cell[76500, 1491, 250, 5, 32, "Input", "ExpressionUUID" -> \
"2abbd6c0-6f35-4322-9bff-0569e48dc4d0"],
Cell[CellGroupData[{
Cell[76775, 1500, 810, 21, 32, "Input", "ExpressionUUID" -> \
"289c88cb-42b8-4e7e-a5c1-55a497d9e2e9"],
Cell[77588, 1523, 746, 20, 45, "Output", "ExpressionUUID" -> \
"149476c2-455b-499a-8a08-a2498279a409"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78380, 1549, 188, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"0114990e-073e-47e8-8e24-909ddd2cd3e4"],
Cell[78571, 1554, 554, 10, 49, "Text", "ExpressionUUID" -> \
"f61b974a-cba5-4a8d-bd20-69e568bb47ee"],
Cell[CellGroupData[{
Cell[79150, 1568, 955, 27, 66, "Code", "ExpressionUUID" -> \
"7f020812-020e-4184-aa6e-baedf34435bc"],
Cell[80108, 1597, 13799, 269, 61, "Output", "ExpressionUUID" -> \
"1698846f-9f37-4d66-af1d-2294380fc449"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93953, 1872, 186, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"4421e623-066a-402f-8d76-9c341642f9f5"],
Cell[94142, 1877, 911, 14, 49, "Text", "ExpressionUUID" -> \
"24a90c9c-6860-4904-a00a-9ad4a1c5b5e5"],
Cell[CellGroupData[{
Cell[95078, 1895, 659, 18, 52, "Code", "ExpressionUUID" -> \
"49eefece-2e28-41df-acf7-beb83c40a5d0"],
Cell[95740, 1915, 46100, 778, 229, "Output", "ExpressionUUID" -> \
"59bc7de8-2e39-46a8-8e09-f7aab8824298"]
}, {2}]],
Cell[141852, 2696, 412, 8, 31, "Direction", "ExpressionUUID" -> \
"855f084d-6f01-43d5-b3a3-b370deaadb8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142301, 2709, 185, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"6a8a3402-fa98-4679-8b2e-e6685c810d4e"],
Cell[142489, 2714, 363, 7, 30, "Text", "ExpressionUUID" -> \
"ef43a243-1dc6-4413-959b-cafd93e1db2b"],
Cell[CellGroupData[{
Cell[142877, 2725, 3814, 104, 224, "Code", "ExpressionUUID" -> \
"10d83644-9cb7-4e73-9446-cebfe5d3e9e5"],
Cell[146694, 2831, 2471, 48, 451, "Output", "ExpressionUUID" -> \
"64c57818-5f6b-4e62-b8a2-64672a37fd58"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149223, 2886, 249, 4, 62, "Section", "ExpressionUUID" -> \
"57248514-3ebd-441b-b624-08dd5027ab13"],
Cell[149475, 2892, 323, 7, 30, "Text", "ExpressionUUID" -> \
"0c0db958-25cd-4205-aaa5-0379d3b70b2d"],
Cell[CellGroupData[{
Cell[149823, 2903, 219, 5, 35, "Subsubsection", "ExpressionUUID" -> \
"194d1dde-8654-4e06-8d1b-dd228678310d"],
Cell[150045, 2910, 557, 9, 49, "Text", "ExpressionUUID" -> \
"1eccef0a-6756-4057-97ad-5366528056db"],
Cell[150605, 2921, 241, 4, 30, "Text", "ExpressionUUID" -> \
"98580a8f-6a7d-4f6c-ac7d-761e36d6119c"],
Cell[150849, 2927, 519, 12, 32, "Input", "ExpressionUUID" -> \
"248ea055-76c2-4145-9fd9-cf60d7f3d053"],
Cell[CellGroupData[{
Cell[151393, 2943, 1049, 30, 52, "Code", "ExpressionUUID" -> \
"eb068efe-ced4-4d0e-bc7f-2b986647b315"],
Cell[152445, 2975, 28785, 575, 161, "Output", "ExpressionUUID" -> \
"feaa842d-dd22-44a6-a1df-7ea748321175"]
}, {2}]],
Cell[181242, 3553, 856, 25, 32, "Input", "ExpressionUUID" -> \
"7c353f97-fa72-4827-9cd7-f47ca6f7deec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182135, 3583, 187, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"5dbb463f-27f2-4db2-9303-9c820307d36b"],
Cell[182325, 3588, 408, 8, 30, "Text", "ExpressionUUID" -> \
"fa4e6b8c-5eb3-4567-b0c8-7362dfb794c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182770, 3601, 188, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"929977bf-4b63-4a4a-b339-3919cfa02604"],
Cell[182961, 3606, 268, 6, 30, "Text", "ExpressionUUID" -> \
"56c03f41-c917-4b95-af64-073323a87ffa"],
Cell[CellGroupData[{
Cell[183254, 3616, 607, 19, 49, "Input", "ExpressionUUID" -> \
"9c289614-1f41-4b04-aa9e-e26287223ea0"],
Cell[183864, 3637, 38781, 654, 229, "Output", "ExpressionUUID" -> \
"de214b95-d05b-430c-8a1d-df1ab1161a35"]
}, {2}]],
Cell[222657, 4294, 211, 5, 30, "Text", "ExpressionUUID" -> \
"2597ae79-f980-49e6-9b1b-d12377f7a658"],
Cell[CellGroupData[{
Cell[222893, 4303, 607, 19, 49, "Input", "ExpressionUUID" -> \
"d2cf573d-03aa-47c2-9052-1d02c0e67620"],
Cell[223503, 4324, 38962, 657, 229, "Output", "ExpressionUUID" -> \
"c1a18b9c-72c6-4e84-9f72-12bb58d50c4f"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[262511, 4987, 180, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"6640b138-5479-49a3-8c9a-2254f41b4fc8"],
Cell[262694, 4992, 169, 3, 30, "Text", "ExpressionUUID" -> \
"b90e30b3-f5a5-40d2-aa54-1764bb03c91b"],
Cell[CellGroupData[{
Cell[262888, 4999, 5908, 163, 296, "Code", "ExpressionUUID" -> \
"b4b86fb2-2038-41a0-a8bf-07e9df8d2c42"],
Cell[268799, 5164, 2295, 46, 481, "Output", "ExpressionUUID" -> \
"4f6b8ad1-1bef-47ae-b41a-57ee200da423"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[271152, 5217, 341, 5, 62, "Section", "ExpressionUUID" -> \
"e631c51b-79fe-4112-b918-da4b39440240"],
Cell[CellGroupData[{
Cell[271518, 5226, 258, 5, 35, "Subsubsection", "ExpressionUUID" -> \
"4474f08b-0fc6-4ce3-8132-e9a808b26e43"],
Cell[271779, 5233, 9080, 154, 122, "Text", "ExpressionUUID" -> \
"12c5c678-843e-4882-bd62-c04524ffc899"],
Cell[280862, 5389, 526, 14, 32, "Input", "ExpressionUUID" -> \
"4c4ac35e-8b79-4d2d-8a9c-518c2956e98f"],
Cell[CellGroupData[{
Cell[281413, 5407, 1473, 45, 52, "Code", "ExpressionUUID" -> \
"c5270ae7-4613-48f8-9a85-3f3d6933ef68"],
Cell[282889, 5454, 1912, 53, 32, "Output", "ExpressionUUID" -> \
"36a53806-34cc-4528-8daf-259702291e8b"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[284847, 5513, 194, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"aeb085bb-2ac4-4f9b-98aa-dad13e5e54ef"],
Cell[285044, 5518, 290, 6, 30, "Text", "ExpressionUUID" -> \
"43c43971-0b14-472a-8f51-b0bb5fec6b40"],
Cell[CellGroupData[{
Cell[285359, 5528, 372, 9, 52, "Code", "ExpressionUUID" -> \
"1bf85ad5-08ea-4512-9f9f-9d6aab18afe6"],
Cell[285734, 5539, 1191, 37, 48, "Output", "ExpressionUUID" -> \
"1c414c53-398a-4bdf-8f5c-89cfa73d758b"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[286971, 5582, 185, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"fcb107fc-df12-4432-83f8-b4f289ba33a0"],
Cell[287159, 5587, 304, 7, 49, "Text", "ExpressionUUID" -> \
"da18ef78-5904-473c-b6ea-975866d5004d"],
Cell[CellGroupData[{
Cell[287488, 5598, 574, 18, 68, "Code", "ExpressionUUID" -> \
"d554d6c5-e1c9-4824-ad6c-3148db9418a0"],
Cell[288065, 5618, 49940, 836, 229, "Output", "ExpressionUUID" -> \
"fe6c3103-a765-45fc-91d1-a338f99808e9"]
}, {2}]],
Cell[338017, 6457, 166, 3, 31, "Direction", "ExpressionUUID" -> \
"f517f9e4-aeb5-4c64-9397-a8a0b97de180"],
Cell[338186, 6462, 196, 3, 30, "Text", "ExpressionUUID" -> \
"133b6288-8201-498e-be0c-1315fae61b02"],
Cell[CellGroupData[{
Cell[338407, 6469, 548, 17, 68, "Code", "ExpressionUUID" -> \
"ba3140f7-87d3-4133-809b-1d235d9b48f3"],
Cell[338958, 6488, 49708, 833, 229, "Output", "ExpressionUUID" -> \
"257f2d5e-67fc-4866-b926-b44469ca2fd0"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[388712, 7327, 183, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"fdeb7566-c5bc-4089-ba15-92fa37bbf697"],
Cell[388898, 7332, 172, 3, 30, "Text", "ExpressionUUID" -> \
"79881bf5-43b1-4cae-8c04-8a4cb5c3e03c"],
Cell[CellGroupData[{
Cell[389095, 7339, 8853, 237, 353, "Code", "ExpressionUUID" -> \
"0f01ef48-f4f8-4a7e-a511-eefbb0d3696d"],
Cell[397951, 7578, 2805, 53, 453, "Output", "ExpressionUUID" -> \
"c008a244-9c7d-4319-91e7-72879fb98a82"]
}, {2}]],
Cell[400768, 7634, 129, 3, 32, "Input", "ExpressionUUID" -> \
"9547e9b8-5bcc-41b6-b2af-96c3841710ac"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[400946, 7643, 234, 4, 59, "FurtherExplorationSection", "ExpressionUUID" \
-> "ab762da0-f7d4-4528-8652-f88d0966a360"],
Cell[401183, 7649, 404, 6, 26, "FurtherExploration", "ExpressionUUID" -> \
"2006652c-6498-405f-863b-1422d5e76056"],
Cell[401590, 7657, 381, 7, 26, "FurtherExploration", "ExpressionUUID" -> \
"07f82b1f-3f5a-40fb-8e22-a694de259e7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402008, 7669, 179, 3, 59, "AuthorshipSection", "ExpressionUUID" -> \
"cc6aa65a-4573-4d24-b7cb-7b62c7d1e917"],
Cell[402190, 7674, 224, 4, 24, "Authorship", "ExpressionUUID" -> \
"72f8c570-1507-4317-aa49-aba3fffabb87"],
Cell[402417, 7680, 211, 4, 24, "Authorship", "ExpressionUUID" -> \
"60790ca0-4e5a-4487-b347-e9c9b9e5638c"],
Cell[402631, 7686, 217, 4, 24, "Authorship", "ExpressionUUID" -> \
"eec1d702-e7a4-4f2a-b562-ca83002bb249"]
}, Open  ]]
}, Open  ]]
}
]
*)

